import {
  RegionInputConfig,
  RegionResolvedConfig,
} from "@aws-sdk/config-resolver";
import {
  EventStreamSerdeInputConfig,
  EventStreamSerdeResolvedConfig,
} from "@aws-sdk/eventstream-serde-config-resolver";
import {
  EndpointInputConfig,
  EndpointResolvedConfig,
} from "@aws-sdk/middleware-endpoint";
import {
  EventStreamInputConfig,
  EventStreamResolvedConfig,
} from "@aws-sdk/middleware-eventstream";
import {
  HostHeaderInputConfig,
  HostHeaderResolvedConfig,
} from "@aws-sdk/middleware-host-header";
import {
  RetryInputConfig,
  RetryResolvedConfig,
} from "@aws-sdk/middleware-retry";
import {
  AwsAuthInputConfig,
  AwsAuthResolvedConfig,
} from "@aws-sdk/middleware-signing";
import {
  UserAgentInputConfig,
  UserAgentResolvedConfig,
} from "@aws-sdk/middleware-user-agent";
import { HttpHandler as __HttpHandler } from "@aws-sdk/protocol-http";
import {
  Client as __Client,
  DefaultsMode as __DefaultsMode,
  SmithyConfiguration as __SmithyConfiguration,
  SmithyResolvedConfiguration as __SmithyResolvedConfiguration,
} from "@aws-sdk/smithy-client";
import {
  BodyLengthCalculator as __BodyLengthCalculator,
  ChecksumConstructor as __ChecksumConstructor,
  Credentials as __Credentials,
  Decoder as __Decoder,
  Encoder as __Encoder,
  EventStreamPayloadHandlerProvider as __EventStreamPayloadHandlerProvider,
  EventStreamSerdeProvider as __EventStreamSerdeProvider,
  HashConstructor as __HashConstructor,
  HttpHandlerOptions as __HttpHandlerOptions,
  Logger as __Logger,
  Provider as __Provider,
  Provider,
  SdkStreamMixinInjector as __SdkStreamMixinInjector,
  StreamCollector as __StreamCollector,
  UrlParser as __UrlParser,
  UserAgent as __UserAgent,
} from "@aws-sdk/types";
import {
  DeleteSessionCommandInput,
  DeleteSessionCommandOutput,
} from "./commands/DeleteSessionCommand";
import {
  GetSessionCommandInput,
  GetSessionCommandOutput,
} from "./commands/GetSessionCommand";
import {
  PutSessionCommandInput,
  PutSessionCommandOutput,
} from "./commands/PutSessionCommand";
import {
  RecognizeTextCommandInput,
  RecognizeTextCommandOutput,
} from "./commands/RecognizeTextCommand";
import {
  RecognizeUtteranceCommandInput,
  RecognizeUtteranceCommandOutput,
} from "./commands/RecognizeUtteranceCommand";
import {
  StartConversationCommandInput,
  StartConversationCommandOutput,
} from "./commands/StartConversationCommand";
import {
  ClientInputEndpointParameters,
  ClientResolvedEndpointParameters,
  EndpointParameters,
} from "./endpoint/EndpointParameters";
export declare type ServiceInputTypes =
  | DeleteSessionCommandInput
  | GetSessionCommandInput
  | PutSessionCommandInput
  | RecognizeTextCommandInput
  | RecognizeUtteranceCommandInput
  | StartConversationCommandInput;
export declare type ServiceOutputTypes =
  | DeleteSessionCommandOutput
  | GetSessionCommandOutput
  | PutSessionCommandOutput
  | RecognizeTextCommandOutput
  | RecognizeUtteranceCommandOutput
  | StartConversationCommandOutput;
export interface ClientDefaults
  extends Partial<__SmithyResolvedConfiguration<__HttpHandlerOptions>> {
  requestHandler?: __HttpHandler;
  sha256?: __ChecksumConstructor | __HashConstructor;
  urlParser?: __UrlParser;
  bodyLengthChecker?: __BodyLengthCalculator;
  streamCollector?: __StreamCollector;
  base64Decoder?: __Decoder;
  base64Encoder?: __Encoder;
  utf8Decoder?: __Decoder;
  utf8Encoder?: __Encoder;
  runtime?: string;
  disableHostPrefix?: boolean;
  serviceId?: string;
  useDualstackEndpoint?: boolean | __Provider<boolean>;
  useFipsEndpoint?: boolean | __Provider<boolean>;
  region?: string | __Provider<string>;
  credentialDefaultProvider?: (input: any) => __Provider<__Credentials>;
  eventStreamPayloadHandlerProvider?: __EventStreamPayloadHandlerProvider;
  defaultUserAgentProvider?: Provider<__UserAgent>;
  maxAttempts?: number | __Provider<number>;
  retryMode?: string | __Provider<string>;
  logger?: __Logger;
  eventStreamSerdeProvider?: __EventStreamSerdeProvider;
  defaultsMode?: __DefaultsMode | __Provider<__DefaultsMode>;
  sdkStreamMixin?: __SdkStreamMixinInjector;
}
declare type LexRuntimeV2ClientConfigType = Partial<
  __SmithyConfiguration<__HttpHandlerOptions>
> &
  ClientDefaults &
  RegionInputConfig &
  EndpointInputConfig<EndpointParameters> &
  RetryInputConfig &
  HostHeaderInputConfig &
  AwsAuthInputConfig &
  EventStreamInputConfig &
  UserAgentInputConfig &
  EventStreamSerdeInputConfig &
  ClientInputEndpointParameters;
export interface LexRuntimeV2ClientConfig
  extends LexRuntimeV2ClientConfigType {}
declare type LexRuntimeV2ClientResolvedConfigType =
  __SmithyResolvedConfiguration<__HttpHandlerOptions> &
    Required<ClientDefaults> &
    RegionResolvedConfig &
    EndpointResolvedConfig<EndpointParameters> &
    RetryResolvedConfig &
    HostHeaderResolvedConfig &
    AwsAuthResolvedConfig &
    EventStreamResolvedConfig &
    UserAgentResolvedConfig &
    EventStreamSerdeResolvedConfig &
    ClientResolvedEndpointParameters;
export interface LexRuntimeV2ClientResolvedConfig
  extends LexRuntimeV2ClientResolvedConfigType {}
export declare class LexRuntimeV2Client extends __Client<
  __HttpHandlerOptions,
  ServiceInputTypes,
  ServiceOutputTypes,
  LexRuntimeV2ClientResolvedConfig
> {
  readonly config: LexRuntimeV2ClientResolvedConfig;
  constructor(configuration: LexRuntimeV2ClientConfig);
  destroy(): void;
}
export {};
