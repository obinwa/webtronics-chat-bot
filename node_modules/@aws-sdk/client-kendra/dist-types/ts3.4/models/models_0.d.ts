import { ExceptionOptionType as __ExceptionOptionType } from "@aws-sdk/smithy-client";
import { DocumentType as __DocumentType } from "@aws-sdk/types";
import { KendraServiceException as __BaseException } from "./KendraServiceException";
export interface AccessControlConfigurationSummary {
  Id: string | undefined;
}
export interface AccessControlListConfiguration {
  KeyPath?: string;
}
export declare class AccessDeniedException extends __BaseException {
  readonly name: "AccessDeniedException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<AccessDeniedException, __BaseException>
  );
}
export interface AclConfiguration {
  AllowedGroupsColumnName: string | undefined;
}
export declare enum HighlightType {
  STANDARD = "STANDARD",
  THESAURUS_SYNONYM = "THESAURUS_SYNONYM",
}
export interface Highlight {
  BeginOffset: number | undefined;
  EndOffset: number | undefined;
  TopAnswer?: boolean;
  Type?: HighlightType | string;
}
export interface TextWithHighlights {
  Text?: string;
  Highlights?: Highlight[];
}
export interface AdditionalResultAttributeValue {
  TextWithHighlightsValue?: TextWithHighlights;
}
export declare enum AdditionalResultAttributeValueType {
  TEXT_WITH_HIGHLIGHTS_VALUE = "TEXT_WITH_HIGHLIGHTS_VALUE",
}
export interface AdditionalResultAttribute {
  Key: string | undefined;
  ValueType: AdditionalResultAttributeValueType | string | undefined;
  Value: AdditionalResultAttributeValue | undefined;
}
export interface DataSourceToIndexFieldMapping {
  DataSourceFieldName: string | undefined;
  DateFieldFormat?: string;
  IndexFieldName: string | undefined;
}
export declare enum AlfrescoEntity {
  blog = "blog",
  documentLibrary = "documentLibrary",
  wiki = "wiki",
}
export interface S3Path {
  Bucket: string | undefined;
  Key: string | undefined;
}
export interface DataSourceVpcConfiguration {
  SubnetIds: string[] | undefined;
  SecurityGroupIds: string[] | undefined;
}
export interface AlfrescoConfiguration {
  SiteUrl: string | undefined;
  SiteId: string | undefined;
  SecretArn: string | undefined;
  SslCertificateS3Path: S3Path | undefined;
  CrawlSystemFolders?: boolean;
  CrawlComments?: boolean;
  EntityFilter?: (AlfrescoEntity | string)[];
  DocumentLibraryFieldMappings?: DataSourceToIndexFieldMapping[];
  BlogFieldMappings?: DataSourceToIndexFieldMapping[];
  WikiFieldMappings?: DataSourceToIndexFieldMapping[];
  InclusionPatterns?: string[];
  ExclusionPatterns?: string[];
  VpcConfiguration?: DataSourceVpcConfiguration;
}
export declare enum EntityType {
  GROUP = "GROUP",
  USER = "USER",
}
export interface EntityConfiguration {
  EntityId: string | undefined;
  EntityType: EntityType | string | undefined;
}
export interface AssociateEntitiesToExperienceRequest {
  Id: string | undefined;
  IndexId: string | undefined;
  EntityList: EntityConfiguration[] | undefined;
}
export interface FailedEntity {
  EntityId?: string;
  ErrorMessage?: string;
}
export interface AssociateEntitiesToExperienceResponse {
  FailedEntityList?: FailedEntity[];
}
export declare class InternalServerException extends __BaseException {
  readonly name: "InternalServerException";
  readonly $fault: "server";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<InternalServerException, __BaseException>
  );
}
export declare class ResourceAlreadyExistException extends __BaseException {
  readonly name: "ResourceAlreadyExistException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<ResourceAlreadyExistException, __BaseException>
  );
}
export declare class ResourceNotFoundException extends __BaseException {
  readonly name: "ResourceNotFoundException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>
  );
}
export declare class ThrottlingException extends __BaseException {
  readonly name: "ThrottlingException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<ThrottlingException, __BaseException>
  );
}
export declare class ValidationException extends __BaseException {
  readonly name: "ValidationException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<ValidationException, __BaseException>
  );
}
export declare enum Persona {
  OWNER = "OWNER",
  VIEWER = "VIEWER",
}
export interface EntityPersonaConfiguration {
  EntityId: string | undefined;
  Persona: Persona | string | undefined;
}
export interface AssociatePersonasToEntitiesRequest {
  Id: string | undefined;
  IndexId: string | undefined;
  Personas: EntityPersonaConfiguration[] | undefined;
}
export interface AssociatePersonasToEntitiesResponse {
  FailedEntityList?: FailedEntity[];
}
export interface DocumentAttributeValue {
  StringValue?: string;
  StringListValue?: string[];
  LongValue?: number;
  DateValue?: Date;
}
export interface DocumentAttribute {
  Key: string | undefined;
  Value: DocumentAttributeValue | undefined;
}
export interface BasicAuthenticationConfiguration {
  Host: string | undefined;
  Port: number | undefined;
  Credentials: string | undefined;
}
export interface AuthenticationConfiguration {
  BasicAuthentication?: BasicAuthenticationConfiguration[];
}
export interface DataSourceSyncJobMetricTarget {
  DataSourceId: string | undefined;
  DataSourceSyncJobId?: string;
}
export interface BatchDeleteDocumentRequest {
  IndexId: string | undefined;
  DocumentIdList: string[] | undefined;
  DataSourceSyncJobMetricTarget?: DataSourceSyncJobMetricTarget;
}
export declare enum ErrorCode {
  INTERNAL_ERROR = "InternalError",
  INVALID_REQUEST = "InvalidRequest",
}
export interface BatchDeleteDocumentResponseFailedDocument {
  Id?: string;
  ErrorCode?: ErrorCode | string;
  ErrorMessage?: string;
}
export interface BatchDeleteDocumentResponse {
  FailedDocuments?: BatchDeleteDocumentResponseFailedDocument[];
}
export declare class ConflictException extends __BaseException {
  readonly name: "ConflictException";
  readonly $fault: "client";
  Message?: string;
  constructor(opts: __ExceptionOptionType<ConflictException, __BaseException>);
}
export interface DocumentInfo {
  DocumentId: string | undefined;
  Attributes?: DocumentAttribute[];
}
export interface BatchGetDocumentStatusRequest {
  IndexId: string | undefined;
  DocumentInfoList: DocumentInfo[] | undefined;
}
export declare enum DocumentStatus {
  FAILED = "FAILED",
  INDEXED = "INDEXED",
  NOT_FOUND = "NOT_FOUND",
  PROCESSING = "PROCESSING",
  UPDATED = "UPDATED",
  UPDATE_FAILED = "UPDATE_FAILED",
}
export interface Status {
  DocumentId?: string;
  DocumentStatus?: DocumentStatus | string;
  FailureCode?: string;
  FailureReason?: string;
}
export interface BatchGetDocumentStatusResponseError {
  DocumentId?: string;
  ErrorCode?: ErrorCode | string;
  ErrorMessage?: string;
}
export interface BatchGetDocumentStatusResponse {
  Errors?: BatchGetDocumentStatusResponseError[];
  DocumentStatusList?: Status[];
}
export declare enum ConditionOperator {
  BeginsWith = "BeginsWith",
  Contains = "Contains",
  Equals = "Equals",
  Exists = "Exists",
  GreaterThan = "GreaterThan",
  GreaterThanOrEquals = "GreaterThanOrEquals",
  LessThan = "LessThan",
  LessThanOrEquals = "LessThanOrEquals",
  NotContains = "NotContains",
  NotEquals = "NotEquals",
  NotExists = "NotExists",
}
export interface DocumentAttributeCondition {
  ConditionDocumentAttributeKey: string | undefined;
  Operator: ConditionOperator | string | undefined;
  ConditionOnValue?: DocumentAttributeValue;
}
export interface DocumentAttributeTarget {
  TargetDocumentAttributeKey?: string;
  TargetDocumentAttributeValueDeletion?: boolean;
  TargetDocumentAttributeValue?: DocumentAttributeValue;
}
export interface InlineCustomDocumentEnrichmentConfiguration {
  Condition?: DocumentAttributeCondition;
  Target?: DocumentAttributeTarget;
  DocumentContentDeletion?: boolean;
}
export interface HookConfiguration {
  InvocationCondition?: DocumentAttributeCondition;
  LambdaArn: string | undefined;
  S3Bucket: string | undefined;
}
export interface CustomDocumentEnrichmentConfiguration {
  InlineConfigurations?: InlineCustomDocumentEnrichmentConfiguration[];
  PreExtractionHookConfiguration?: HookConfiguration;
  PostExtractionHookConfiguration?: HookConfiguration;
  RoleArn?: string;
}
export declare enum ReadAccessType {
  ALLOW = "ALLOW",
  DENY = "DENY",
}
export declare enum PrincipalType {
  GROUP = "GROUP",
  USER = "USER",
}
export interface Principal {
  Name: string | undefined;
  Type: PrincipalType | string | undefined;
  Access: ReadAccessType | string | undefined;
  DataSourceId?: string;
}
export declare enum ContentType {
  CSV = "CSV",
  HTML = "HTML",
  JSON = "JSON",
  MD = "MD",
  MS_EXCEL = "MS_EXCEL",
  MS_WORD = "MS_WORD",
  PDF = "PDF",
  PLAIN_TEXT = "PLAIN_TEXT",
  PPT = "PPT",
  RTF = "RTF",
  XML = "XML",
  XSLT = "XSLT",
}
export interface HierarchicalPrincipal {
  PrincipalList: Principal[] | undefined;
}
export interface Document {
  Id: string | undefined;
  Title?: string;
  Blob?: Uint8Array;
  S3Path?: S3Path;
  Attributes?: DocumentAttribute[];
  AccessControlList?: Principal[];
  HierarchicalAccessControlList?: HierarchicalPrincipal[];
  ContentType?: ContentType | string;
  AccessControlConfigurationId?: string;
}
export interface BatchPutDocumentRequest {
  IndexId: string | undefined;
  RoleArn?: string;
  Documents: Document[] | undefined;
  CustomDocumentEnrichmentConfiguration?: CustomDocumentEnrichmentConfiguration;
}
export interface BatchPutDocumentResponseFailedDocument {
  Id?: string;
  ErrorCode?: ErrorCode | string;
  ErrorMessage?: string;
}
export interface BatchPutDocumentResponse {
  FailedDocuments?: BatchPutDocumentResponseFailedDocument[];
}
export declare class ServiceQuotaExceededException extends __BaseException {
  readonly name: "ServiceQuotaExceededException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<ServiceQuotaExceededException, __BaseException>
  );
}
export interface ClearQuerySuggestionsRequest {
  IndexId: string | undefined;
}
export interface CreateAccessControlConfigurationRequest {
  IndexId: string | undefined;
  Name: string | undefined;
  Description?: string;
  AccessControlList?: Principal[];
  HierarchicalAccessControlList?: HierarchicalPrincipal[];
  ClientToken?: string;
}
export interface CreateAccessControlConfigurationResponse {
  Id: string | undefined;
}
export interface BoxConfiguration {
  EnterpriseId: string | undefined;
  SecretArn: string | undefined;
  UseChangeLog?: boolean;
  CrawlComments?: boolean;
  CrawlTasks?: boolean;
  CrawlWebLinks?: boolean;
  FileFieldMappings?: DataSourceToIndexFieldMapping[];
  TaskFieldMappings?: DataSourceToIndexFieldMapping[];
  CommentFieldMappings?: DataSourceToIndexFieldMapping[];
  WebLinkFieldMappings?: DataSourceToIndexFieldMapping[];
  InclusionPatterns?: string[];
  ExclusionPatterns?: string[];
  VpcConfiguration?: DataSourceVpcConfiguration;
}
export declare enum ConfluenceAttachmentFieldName {
  AUTHOR = "AUTHOR",
  CONTENT_TYPE = "CONTENT_TYPE",
  CREATED_DATE = "CREATED_DATE",
  DISPLAY_URL = "DISPLAY_URL",
  FILE_SIZE = "FILE_SIZE",
  ITEM_TYPE = "ITEM_TYPE",
  PARENT_ID = "PARENT_ID",
  SPACE_KEY = "SPACE_KEY",
  SPACE_NAME = "SPACE_NAME",
  URL = "URL",
  VERSION = "VERSION",
}
export interface ConfluenceAttachmentToIndexFieldMapping {
  DataSourceFieldName?: ConfluenceAttachmentFieldName | string;
  DateFieldFormat?: string;
  IndexFieldName?: string;
}
export interface ConfluenceAttachmentConfiguration {
  CrawlAttachments?: boolean;
  AttachmentFieldMappings?: ConfluenceAttachmentToIndexFieldMapping[];
}
export declare enum ConfluenceAuthenticationType {
  HTTP_BASIC = "HTTP_BASIC",
  PAT = "PAT",
}
export declare enum ConfluenceBlogFieldName {
  AUTHOR = "AUTHOR",
  DISPLAY_URL = "DISPLAY_URL",
  ITEM_TYPE = "ITEM_TYPE",
  LABELS = "LABELS",
  PUBLISH_DATE = "PUBLISH_DATE",
  SPACE_KEY = "SPACE_KEY",
  SPACE_NAME = "SPACE_NAME",
  URL = "URL",
  VERSION = "VERSION",
}
export interface ConfluenceBlogToIndexFieldMapping {
  DataSourceFieldName?: ConfluenceBlogFieldName | string;
  DateFieldFormat?: string;
  IndexFieldName?: string;
}
export interface ConfluenceBlogConfiguration {
  BlogFieldMappings?: ConfluenceBlogToIndexFieldMapping[];
}
export declare enum ConfluencePageFieldName {
  AUTHOR = "AUTHOR",
  CONTENT_STATUS = "CONTENT_STATUS",
  CREATED_DATE = "CREATED_DATE",
  DISPLAY_URL = "DISPLAY_URL",
  ITEM_TYPE = "ITEM_TYPE",
  LABELS = "LABELS",
  MODIFIED_DATE = "MODIFIED_DATE",
  PARENT_ID = "PARENT_ID",
  SPACE_KEY = "SPACE_KEY",
  SPACE_NAME = "SPACE_NAME",
  URL = "URL",
  VERSION = "VERSION",
}
export interface ConfluencePageToIndexFieldMapping {
  DataSourceFieldName?: ConfluencePageFieldName | string;
  DateFieldFormat?: string;
  IndexFieldName?: string;
}
export interface ConfluencePageConfiguration {
  PageFieldMappings?: ConfluencePageToIndexFieldMapping[];
}
export interface ProxyConfiguration {
  Host: string | undefined;
  Port: number | undefined;
  Credentials?: string;
}
export declare enum ConfluenceSpaceFieldName {
  DISPLAY_URL = "DISPLAY_URL",
  ITEM_TYPE = "ITEM_TYPE",
  SPACE_KEY = "SPACE_KEY",
  URL = "URL",
}
export interface ConfluenceSpaceToIndexFieldMapping {
  DataSourceFieldName?: ConfluenceSpaceFieldName | string;
  DateFieldFormat?: string;
  IndexFieldName?: string;
}
export interface ConfluenceSpaceConfiguration {
  CrawlPersonalSpaces?: boolean;
  CrawlArchivedSpaces?: boolean;
  IncludeSpaces?: string[];
  ExcludeSpaces?: string[];
  SpaceFieldMappings?: ConfluenceSpaceToIndexFieldMapping[];
}
export declare enum ConfluenceVersion {
  CLOUD = "CLOUD",
  SERVER = "SERVER",
}
export interface ConfluenceConfiguration {
  ServerUrl: string | undefined;
  SecretArn: string | undefined;
  Version: ConfluenceVersion | string | undefined;
  SpaceConfiguration?: ConfluenceSpaceConfiguration;
  PageConfiguration?: ConfluencePageConfiguration;
  BlogConfiguration?: ConfluenceBlogConfiguration;
  AttachmentConfiguration?: ConfluenceAttachmentConfiguration;
  VpcConfiguration?: DataSourceVpcConfiguration;
  InclusionPatterns?: string[];
  ExclusionPatterns?: string[];
  ProxyConfiguration?: ProxyConfiguration;
  AuthenticationType?: ConfluenceAuthenticationType | string;
}
export interface ColumnConfiguration {
  DocumentIdColumnName: string | undefined;
  DocumentDataColumnName: string | undefined;
  DocumentTitleColumnName?: string;
  FieldMappings?: DataSourceToIndexFieldMapping[];
  ChangeDetectingColumns: string[] | undefined;
}
export interface ConnectionConfiguration {
  DatabaseHost: string | undefined;
  DatabasePort: number | undefined;
  DatabaseName: string | undefined;
  TableName: string | undefined;
  SecretArn: string | undefined;
}
export declare enum DatabaseEngineType {
  RDS_AURORA_MYSQL = "RDS_AURORA_MYSQL",
  RDS_AURORA_POSTGRESQL = "RDS_AURORA_POSTGRESQL",
  RDS_MYSQL = "RDS_MYSQL",
  RDS_POSTGRESQL = "RDS_POSTGRESQL",
}
export declare enum QueryIdentifiersEnclosingOption {
  DOUBLE_QUOTES = "DOUBLE_QUOTES",
  NONE = "NONE",
}
export interface SqlConfiguration {
  QueryIdentifiersEnclosingOption?: QueryIdentifiersEnclosingOption | string;
}
export interface DatabaseConfiguration {
  DatabaseEngineType: DatabaseEngineType | string | undefined;
  ConnectionConfiguration: ConnectionConfiguration | undefined;
  VpcConfiguration?: DataSourceVpcConfiguration;
  ColumnConfiguration: ColumnConfiguration | undefined;
  AclConfiguration?: AclConfiguration;
  SqlConfiguration?: SqlConfiguration;
}
export declare enum FsxFileSystemType {
  WINDOWS = "WINDOWS",
}
export interface FsxConfiguration {
  FileSystemId: string | undefined;
  FileSystemType: FsxFileSystemType | string | undefined;
  VpcConfiguration: DataSourceVpcConfiguration | undefined;
  SecretArn?: string;
  InclusionPatterns?: string[];
  ExclusionPatterns?: string[];
  FieldMappings?: DataSourceToIndexFieldMapping[];
}
export interface GitHubDocumentCrawlProperties {
  CrawlRepositoryDocuments?: boolean;
  CrawlIssue?: boolean;
  CrawlIssueComment?: boolean;
  CrawlIssueCommentAttachment?: boolean;
  CrawlPullRequest?: boolean;
  CrawlPullRequestComment?: boolean;
  CrawlPullRequestCommentAttachment?: boolean;
}
export interface OnPremiseConfiguration {
  HostUrl: string | undefined;
  OrganizationName: string | undefined;
  SslCertificateS3Path: S3Path | undefined;
}
export interface SaaSConfiguration {
  OrganizationName: string | undefined;
  HostUrl: string | undefined;
}
export declare enum Type {
  ON_PREMISE = "ON_PREMISE",
  SAAS = "SAAS",
}
export interface GitHubConfiguration {
  SaaSConfiguration?: SaaSConfiguration;
  OnPremiseConfiguration?: OnPremiseConfiguration;
  Type?: Type | string;
  SecretArn: string | undefined;
  UseChangeLog?: boolean;
  GitHubDocumentCrawlProperties?: GitHubDocumentCrawlProperties;
  RepositoryFilter?: string[];
  InclusionFolderNamePatterns?: string[];
  InclusionFileTypePatterns?: string[];
  InclusionFileNamePatterns?: string[];
  ExclusionFolderNamePatterns?: string[];
  ExclusionFileTypePatterns?: string[];
  ExclusionFileNamePatterns?: string[];
  VpcConfiguration?: DataSourceVpcConfiguration;
  GitHubRepositoryConfigurationFieldMappings?: DataSourceToIndexFieldMapping[];
  GitHubCommitConfigurationFieldMappings?: DataSourceToIndexFieldMapping[];
  GitHubIssueDocumentConfigurationFieldMappings?: DataSourceToIndexFieldMapping[];
  GitHubIssueCommentConfigurationFieldMappings?: DataSourceToIndexFieldMapping[];
  GitHubIssueAttachmentConfigurationFieldMappings?: DataSourceToIndexFieldMapping[];
  GitHubPullRequestCommentConfigurationFieldMappings?: DataSourceToIndexFieldMapping[];
  GitHubPullRequestDocumentConfigurationFieldMappings?: DataSourceToIndexFieldMapping[];
  GitHubPullRequestDocumentAttachmentConfigurationFieldMappings?: DataSourceToIndexFieldMapping[];
}
export interface GoogleDriveConfiguration {
  SecretArn: string | undefined;
  InclusionPatterns?: string[];
  ExclusionPatterns?: string[];
  FieldMappings?: DataSourceToIndexFieldMapping[];
  ExcludeMimeTypes?: string[];
  ExcludeUserAccounts?: string[];
  ExcludeSharedDrives?: string[];
}
export declare enum IssueSubEntity {
  ATTACHMENTS = "ATTACHMENTS",
  COMMENTS = "COMMENTS",
  WORKLOGS = "WORKLOGS",
}
export interface JiraConfiguration {
  JiraAccountUrl: string | undefined;
  SecretArn: string | undefined;
  UseChangeLog?: boolean;
  Project?: string[];
  IssueType?: string[];
  Status?: string[];
  IssueSubEntityFilter?: (IssueSubEntity | string)[];
  AttachmentFieldMappings?: DataSourceToIndexFieldMapping[];
  CommentFieldMappings?: DataSourceToIndexFieldMapping[];
  IssueFieldMappings?: DataSourceToIndexFieldMapping[];
  ProjectFieldMappings?: DataSourceToIndexFieldMapping[];
  WorkLogFieldMappings?: DataSourceToIndexFieldMapping[];
  InclusionPatterns?: string[];
  ExclusionPatterns?: string[];
  VpcConfiguration?: DataSourceVpcConfiguration;
}
export interface OneDriveUsers {
  OneDriveUserList?: string[];
  OneDriveUserS3Path?: S3Path;
}
export interface OneDriveConfiguration {
  TenantDomain: string | undefined;
  SecretArn: string | undefined;
  OneDriveUsers: OneDriveUsers | undefined;
  InclusionPatterns?: string[];
  ExclusionPatterns?: string[];
  FieldMappings?: DataSourceToIndexFieldMapping[];
  DisableLocalGroups?: boolean;
}
export interface QuipConfiguration {
  Domain: string | undefined;
  SecretArn: string | undefined;
  CrawlFileComments?: boolean;
  CrawlChatRooms?: boolean;
  CrawlAttachments?: boolean;
  FolderIds?: string[];
  ThreadFieldMappings?: DataSourceToIndexFieldMapping[];
  MessageFieldMappings?: DataSourceToIndexFieldMapping[];
  AttachmentFieldMappings?: DataSourceToIndexFieldMapping[];
  InclusionPatterns?: string[];
  ExclusionPatterns?: string[];
  VpcConfiguration?: DataSourceVpcConfiguration;
}
export interface DocumentsMetadataConfiguration {
  S3Prefix?: string;
}
export interface S3DataSourceConfiguration {
  BucketName: string | undefined;
  InclusionPrefixes?: string[];
  InclusionPatterns?: string[];
  ExclusionPatterns?: string[];
  DocumentsMetadataConfiguration?: DocumentsMetadataConfiguration;
  AccessControlListConfiguration?: AccessControlListConfiguration;
}
export declare enum SalesforceChatterFeedIncludeFilterType {
  ACTIVE_USER = "ACTIVE_USER",
  STANDARD_USER = "STANDARD_USER",
}
export interface SalesforceChatterFeedConfiguration {
  DocumentDataFieldName: string | undefined;
  DocumentTitleFieldName?: string;
  FieldMappings?: DataSourceToIndexFieldMapping[];
  IncludeFilterTypes?: (SalesforceChatterFeedIncludeFilterType | string)[];
}
export interface SalesforceCustomKnowledgeArticleTypeConfiguration {
  Name: string | undefined;
  DocumentDataFieldName: string | undefined;
  DocumentTitleFieldName?: string;
  FieldMappings?: DataSourceToIndexFieldMapping[];
}
export declare enum SalesforceKnowledgeArticleState {
  ARCHIVED = "ARCHIVED",
  DRAFT = "DRAFT",
  PUBLISHED = "PUBLISHED",
}
export interface SalesforceStandardKnowledgeArticleTypeConfiguration {
  DocumentDataFieldName: string | undefined;
  DocumentTitleFieldName?: string;
  FieldMappings?: DataSourceToIndexFieldMapping[];
}
export interface SalesforceKnowledgeArticleConfiguration {
  IncludedStates: (SalesforceKnowledgeArticleState | string)[] | undefined;
  StandardKnowledgeArticleTypeConfiguration?: SalesforceStandardKnowledgeArticleTypeConfiguration;
  CustomKnowledgeArticleTypeConfigurations?: SalesforceCustomKnowledgeArticleTypeConfiguration[];
}
export interface SalesforceStandardObjectAttachmentConfiguration {
  DocumentTitleFieldName?: string;
  FieldMappings?: DataSourceToIndexFieldMapping[];
}
export declare enum SalesforceStandardObjectName {
  ACCOUNT = "ACCOUNT",
  CAMPAIGN = "CAMPAIGN",
  CASE = "CASE",
  CONTACT = "CONTACT",
  CONTRACT = "CONTRACT",
  DOCUMENT = "DOCUMENT",
  GROUP = "GROUP",
  IDEA = "IDEA",
  LEAD = "LEAD",
  OPPORTUNITY = "OPPORTUNITY",
  PARTNER = "PARTNER",
  PRICEBOOK = "PRICEBOOK",
  PRODUCT = "PRODUCT",
  PROFILE = "PROFILE",
  SOLUTION = "SOLUTION",
  TASK = "TASK",
  USER = "USER",
}
export interface SalesforceStandardObjectConfiguration {
  Name: SalesforceStandardObjectName | string | undefined;
  DocumentDataFieldName: string | undefined;
  DocumentTitleFieldName?: string;
  FieldMappings?: DataSourceToIndexFieldMapping[];
}
export interface SalesforceConfiguration {
  ServerUrl: string | undefined;
  SecretArn: string | undefined;
  StandardObjectConfigurations?: SalesforceStandardObjectConfiguration[];
  KnowledgeArticleConfiguration?: SalesforceKnowledgeArticleConfiguration;
  ChatterFeedConfiguration?: SalesforceChatterFeedConfiguration;
  CrawlAttachments?: boolean;
  StandardObjectAttachmentConfiguration?: SalesforceStandardObjectAttachmentConfiguration;
  IncludeAttachmentFilePatterns?: string[];
  ExcludeAttachmentFilePatterns?: string[];
}
export declare enum ServiceNowAuthenticationType {
  HTTP_BASIC = "HTTP_BASIC",
  OAUTH2 = "OAUTH2",
}
export interface ServiceNowKnowledgeArticleConfiguration {
  CrawlAttachments?: boolean;
  IncludeAttachmentFilePatterns?: string[];
  ExcludeAttachmentFilePatterns?: string[];
  DocumentDataFieldName: string | undefined;
  DocumentTitleFieldName?: string;
  FieldMappings?: DataSourceToIndexFieldMapping[];
  FilterQuery?: string;
}
export interface ServiceNowServiceCatalogConfiguration {
  CrawlAttachments?: boolean;
  IncludeAttachmentFilePatterns?: string[];
  ExcludeAttachmentFilePatterns?: string[];
  DocumentDataFieldName: string | undefined;
  DocumentTitleFieldName?: string;
  FieldMappings?: DataSourceToIndexFieldMapping[];
}
export declare enum ServiceNowBuildVersionType {
  LONDON = "LONDON",
  OTHERS = "OTHERS",
}
export interface ServiceNowConfiguration {
  HostUrl: string | undefined;
  SecretArn: string | undefined;
  ServiceNowBuildVersion: ServiceNowBuildVersionType | string | undefined;
  KnowledgeArticleConfiguration?: ServiceNowKnowledgeArticleConfiguration;
  ServiceCatalogConfiguration?: ServiceNowServiceCatalogConfiguration;
  AuthenticationType?: ServiceNowAuthenticationType | string;
}
export declare enum SharePointOnlineAuthenticationType {
  HTTP_BASIC = "HTTP_BASIC",
  OAUTH2 = "OAUTH2",
}
export declare enum SharePointVersion {
  SHAREPOINT_2013 = "SHAREPOINT_2013",
  SHAREPOINT_2016 = "SHAREPOINT_2016",
  SHAREPOINT_2019 = "SHAREPOINT_2019",
  SHAREPOINT_ONLINE = "SHAREPOINT_ONLINE",
}
export interface SharePointConfiguration {
  SharePointVersion: SharePointVersion | string | undefined;
  Urls: string[] | undefined;
  SecretArn: string | undefined;
  CrawlAttachments?: boolean;
  UseChangeLog?: boolean;
  InclusionPatterns?: string[];
  ExclusionPatterns?: string[];
  VpcConfiguration?: DataSourceVpcConfiguration;
  FieldMappings?: DataSourceToIndexFieldMapping[];
  DocumentTitleFieldName?: string;
  DisableLocalGroups?: boolean;
  SslCertificateS3Path?: S3Path;
  AuthenticationType?: SharePointOnlineAuthenticationType | string;
  ProxyConfiguration?: ProxyConfiguration;
}
export declare enum SlackEntity {
  DIRECT_MESSAGE = "DIRECT_MESSAGE",
  GROUP_MESSAGE = "GROUP_MESSAGE",
  PRIVATE_CHANNEL = "PRIVATE_CHANNEL",
  PUBLIC_CHANNEL = "PUBLIC_CHANNEL",
}
export interface SlackConfiguration {
  TeamId: string | undefined;
  SecretArn: string | undefined;
  VpcConfiguration?: DataSourceVpcConfiguration;
  SlackEntityList: (SlackEntity | string)[] | undefined;
  UseChangeLog?: boolean;
  CrawlBotMessage?: boolean;
  ExcludeArchived?: boolean;
  SinceCrawlDate: string | undefined;
  LookBackPeriod?: number;
  PrivateChannelFilter?: string[];
  PublicChannelFilter?: string[];
  InclusionPatterns?: string[];
  ExclusionPatterns?: string[];
  FieldMappings?: DataSourceToIndexFieldMapping[];
}
export interface TemplateConfiguration {
  Template?: __DocumentType;
}
export declare enum WebCrawlerMode {
  EVERYTHING = "EVERYTHING",
  HOST_ONLY = "HOST_ONLY",
  SUBDOMAINS = "SUBDOMAINS",
}
export interface SeedUrlConfiguration {
  SeedUrls: string[] | undefined;
  WebCrawlerMode?: WebCrawlerMode | string;
}
export interface SiteMapsConfiguration {
  SiteMaps: string[] | undefined;
}
export interface Urls {
  SeedUrlConfiguration?: SeedUrlConfiguration;
  SiteMapsConfiguration?: SiteMapsConfiguration;
}
export interface WebCrawlerConfiguration {
  Urls: Urls | undefined;
  CrawlDepth?: number;
  MaxLinksPerPage?: number;
  MaxContentSizePerPageInMegaBytes?: number;
  MaxUrlsPerMinuteCrawlRate?: number;
  UrlInclusionPatterns?: string[];
  UrlExclusionPatterns?: string[];
  ProxyConfiguration?: ProxyConfiguration;
  AuthenticationConfiguration?: AuthenticationConfiguration;
}
export interface WorkDocsConfiguration {
  OrganizationId: string | undefined;
  CrawlComments?: boolean;
  UseChangeLog?: boolean;
  InclusionPatterns?: string[];
  ExclusionPatterns?: string[];
  FieldMappings?: DataSourceToIndexFieldMapping[];
}
export interface DataSourceConfiguration {
  S3Configuration?: S3DataSourceConfiguration;
  SharePointConfiguration?: SharePointConfiguration;
  DatabaseConfiguration?: DatabaseConfiguration;
  SalesforceConfiguration?: SalesforceConfiguration;
  OneDriveConfiguration?: OneDriveConfiguration;
  ServiceNowConfiguration?: ServiceNowConfiguration;
  ConfluenceConfiguration?: ConfluenceConfiguration;
  GoogleDriveConfiguration?: GoogleDriveConfiguration;
  WebCrawlerConfiguration?: WebCrawlerConfiguration;
  WorkDocsConfiguration?: WorkDocsConfiguration;
  FsxConfiguration?: FsxConfiguration;
  SlackConfiguration?: SlackConfiguration;
  BoxConfiguration?: BoxConfiguration;
  QuipConfiguration?: QuipConfiguration;
  JiraConfiguration?: JiraConfiguration;
  GitHubConfiguration?: GitHubConfiguration;
  AlfrescoConfiguration?: AlfrescoConfiguration;
  TemplateConfiguration?: TemplateConfiguration;
}
export interface Tag {
  Key: string | undefined;
  Value: string | undefined;
}
export declare enum DataSourceType {
  ALFRESCO = "ALFRESCO",
  BOX = "BOX",
  CONFLUENCE = "CONFLUENCE",
  CUSTOM = "CUSTOM",
  DATABASE = "DATABASE",
  FSX = "FSX",
  GITHUB = "GITHUB",
  GOOGLEDRIVE = "GOOGLEDRIVE",
  JIRA = "JIRA",
  ONEDRIVE = "ONEDRIVE",
  QUIP = "QUIP",
  S3 = "S3",
  SALESFORCE = "SALESFORCE",
  SERVICENOW = "SERVICENOW",
  SHAREPOINT = "SHAREPOINT",
  SLACK = "SLACK",
  TEMPLATE = "TEMPLATE",
  WEBCRAWLER = "WEBCRAWLER",
  WORKDOCS = "WORKDOCS",
}
export interface CreateDataSourceRequest {
  Name: string | undefined;
  IndexId: string | undefined;
  Type: DataSourceType | string | undefined;
  Configuration?: DataSourceConfiguration;
  VpcConfiguration?: DataSourceVpcConfiguration;
  Description?: string;
  Schedule?: string;
  RoleArn?: string;
  Tags?: Tag[];
  ClientToken?: string;
  LanguageCode?: string;
  CustomDocumentEnrichmentConfiguration?: CustomDocumentEnrichmentConfiguration;
}
export interface CreateDataSourceResponse {
  Id: string | undefined;
}
export interface ContentSourceConfiguration {
  DataSourceIds?: string[];
  FaqIds?: string[];
  DirectPutContent?: boolean;
}
export interface UserIdentityConfiguration {
  IdentityAttributeName?: string;
}
export interface ExperienceConfiguration {
  ContentSourceConfiguration?: ContentSourceConfiguration;
  UserIdentityConfiguration?: UserIdentityConfiguration;
}
export interface CreateExperienceRequest {
  Name: string | undefined;
  IndexId: string | undefined;
  RoleArn?: string;
  Configuration?: ExperienceConfiguration;
  Description?: string;
  ClientToken?: string;
}
export interface CreateExperienceResponse {
  Id: string | undefined;
}
export declare enum FaqFileFormat {
  CSV = "CSV",
  CSV_WITH_HEADER = "CSV_WITH_HEADER",
  JSON = "JSON",
}
export interface CreateFaqRequest {
  IndexId: string | undefined;
  Name: string | undefined;
  Description?: string;
  S3Path: S3Path | undefined;
  RoleArn: string | undefined;
  Tags?: Tag[];
  FileFormat?: FaqFileFormat | string;
  ClientToken?: string;
  LanguageCode?: string;
}
export interface CreateFaqResponse {
  Id?: string;
}
export declare enum IndexEdition {
  DEVELOPER_EDITION = "DEVELOPER_EDITION",
  ENTERPRISE_EDITION = "ENTERPRISE_EDITION",
}
export interface ServerSideEncryptionConfiguration {
  KmsKeyId?: string;
}
export declare enum UserContextPolicy {
  ATTRIBUTE_FILTER = "ATTRIBUTE_FILTER",
  USER_TOKEN = "USER_TOKEN",
}
export declare enum UserGroupResolutionMode {
  AWS_SSO = "AWS_SSO",
  NONE = "NONE",
}
export interface UserGroupResolutionConfiguration {
  UserGroupResolutionMode: UserGroupResolutionMode | string | undefined;
}
export interface JsonTokenTypeConfiguration {
  UserNameAttributeField: string | undefined;
  GroupAttributeField: string | undefined;
}
export declare enum KeyLocation {
  SECRET_MANAGER = "SECRET_MANAGER",
  URL = "URL",
}
export interface JwtTokenTypeConfiguration {
  KeyLocation: KeyLocation | string | undefined;
  URL?: string;
  SecretManagerArn?: string;
  UserNameAttributeField?: string;
  GroupAttributeField?: string;
  Issuer?: string;
  ClaimRegex?: string;
}
export interface UserTokenConfiguration {
  JwtTokenTypeConfiguration?: JwtTokenTypeConfiguration;
  JsonTokenTypeConfiguration?: JsonTokenTypeConfiguration;
}
export interface CreateIndexRequest {
  Name: string | undefined;
  Edition?: IndexEdition | string;
  RoleArn: string | undefined;
  ServerSideEncryptionConfiguration?: ServerSideEncryptionConfiguration;
  Description?: string;
  ClientToken?: string;
  Tags?: Tag[];
  UserTokenConfigurations?: UserTokenConfiguration[];
  UserContextPolicy?: UserContextPolicy | string;
  UserGroupResolutionConfiguration?: UserGroupResolutionConfiguration;
}
export interface CreateIndexResponse {
  Id?: string;
}
export interface CreateQuerySuggestionsBlockListRequest {
  IndexId: string | undefined;
  Name: string | undefined;
  Description?: string;
  SourceS3Path: S3Path | undefined;
  ClientToken?: string;
  RoleArn: string | undefined;
  Tags?: Tag[];
}
export interface CreateQuerySuggestionsBlockListResponse {
  Id?: string;
}
export interface CreateThesaurusRequest {
  IndexId: string | undefined;
  Name: string | undefined;
  Description?: string;
  RoleArn: string | undefined;
  Tags?: Tag[];
  SourceS3Path: S3Path | undefined;
  ClientToken?: string;
}
export interface CreateThesaurusResponse {
  Id?: string;
}
export interface DeleteAccessControlConfigurationRequest {
  IndexId: string | undefined;
  Id: string | undefined;
}
export interface DeleteAccessControlConfigurationResponse {}
export interface DeleteDataSourceRequest {
  Id: string | undefined;
  IndexId: string | undefined;
}
export interface DeleteExperienceRequest {
  Id: string | undefined;
  IndexId: string | undefined;
}
export interface DeleteExperienceResponse {}
export interface DeleteFaqRequest {
  Id: string | undefined;
  IndexId: string | undefined;
}
export interface DeleteIndexRequest {
  Id: string | undefined;
}
export interface DeletePrincipalMappingRequest {
  IndexId: string | undefined;
  DataSourceId?: string;
  GroupId: string | undefined;
  OrderingId?: number;
}
export interface DeleteQuerySuggestionsBlockListRequest {
  IndexId: string | undefined;
  Id: string | undefined;
}
export interface DeleteThesaurusRequest {
  Id: string | undefined;
  IndexId: string | undefined;
}
export interface DescribeAccessControlConfigurationRequest {
  IndexId: string | undefined;
  Id: string | undefined;
}
export interface DescribeAccessControlConfigurationResponse {
  Name: string | undefined;
  Description?: string;
  ErrorMessage?: string;
  AccessControlList?: Principal[];
  HierarchicalAccessControlList?: HierarchicalPrincipal[];
}
export interface DescribeDataSourceRequest {
  Id: string | undefined;
  IndexId: string | undefined;
}
export declare enum DataSourceStatus {
  ACTIVE = "ACTIVE",
  CREATING = "CREATING",
  DELETING = "DELETING",
  FAILED = "FAILED",
  UPDATING = "UPDATING",
}
export interface DescribeDataSourceResponse {
  Id?: string;
  IndexId?: string;
  Name?: string;
  Type?: DataSourceType | string;
  Configuration?: DataSourceConfiguration;
  VpcConfiguration?: DataSourceVpcConfiguration;
  CreatedAt?: Date;
  UpdatedAt?: Date;
  Description?: string;
  Status?: DataSourceStatus | string;
  Schedule?: string;
  RoleArn?: string;
  ErrorMessage?: string;
  LanguageCode?: string;
  CustomDocumentEnrichmentConfiguration?: CustomDocumentEnrichmentConfiguration;
}
export interface DescribeExperienceRequest {
  Id: string | undefined;
  IndexId: string | undefined;
}
export declare enum EndpointType {
  HOME = "HOME",
}
export interface ExperienceEndpoint {
  EndpointType?: EndpointType | string;
  Endpoint?: string;
}
export declare enum ExperienceStatus {
  ACTIVE = "ACTIVE",
  CREATING = "CREATING",
  DELETING = "DELETING",
  FAILED = "FAILED",
}
export interface DescribeExperienceResponse {
  Id?: string;
  IndexId?: string;
  Name?: string;
  Endpoints?: ExperienceEndpoint[];
  Configuration?: ExperienceConfiguration;
  CreatedAt?: Date;
  UpdatedAt?: Date;
  Description?: string;
  Status?: ExperienceStatus | string;
  RoleArn?: string;
  ErrorMessage?: string;
}
export interface DescribeFaqRequest {
  Id: string | undefined;
  IndexId: string | undefined;
}
export declare enum FaqStatus {
  ACTIVE = "ACTIVE",
  CREATING = "CREATING",
  DELETING = "DELETING",
  FAILED = "FAILED",
  UPDATING = "UPDATING",
}
export interface DescribeFaqResponse {
  Id?: string;
  IndexId?: string;
  Name?: string;
  Description?: string;
  CreatedAt?: Date;
  UpdatedAt?: Date;
  S3Path?: S3Path;
  Status?: FaqStatus | string;
  RoleArn?: string;
  ErrorMessage?: string;
  FileFormat?: FaqFileFormat | string;
  LanguageCode?: string;
}
export interface DescribeIndexRequest {
  Id: string | undefined;
}
export interface CapacityUnitsConfiguration {
  StorageCapacityUnits: number | undefined;
  QueryCapacityUnits: number | undefined;
}
export declare enum Order {
  ASCENDING = "ASCENDING",
  DESCENDING = "DESCENDING",
}
export interface Relevance {
  Freshness?: boolean;
  Importance?: number;
  Duration?: string;
  RankOrder?: Order | string;
  ValueImportanceMap?: Record<string, number>;
}
export interface Search {
  Facetable?: boolean;
  Searchable?: boolean;
  Displayable?: boolean;
  Sortable?: boolean;
}
export declare enum DocumentAttributeValueType {
  DATE_VALUE = "DATE_VALUE",
  LONG_VALUE = "LONG_VALUE",
  STRING_LIST_VALUE = "STRING_LIST_VALUE",
  STRING_VALUE = "STRING_VALUE",
}
export interface DocumentMetadataConfiguration {
  Name: string | undefined;
  Type: DocumentAttributeValueType | string | undefined;
  Relevance?: Relevance;
  Search?: Search;
}
export interface FaqStatistics {
  IndexedQuestionAnswersCount: number | undefined;
}
export interface TextDocumentStatistics {
  IndexedTextDocumentsCount: number | undefined;
  IndexedTextBytes: number | undefined;
}
export interface IndexStatistics {
  FaqStatistics: FaqStatistics | undefined;
  TextDocumentStatistics: TextDocumentStatistics | undefined;
}
export declare enum IndexStatus {
  ACTIVE = "ACTIVE",
  CREATING = "CREATING",
  DELETING = "DELETING",
  FAILED = "FAILED",
  SYSTEM_UPDATING = "SYSTEM_UPDATING",
  UPDATING = "UPDATING",
}
export interface DescribeIndexResponse {
  Name?: string;
  Id?: string;
  Edition?: IndexEdition | string;
  RoleArn?: string;
  ServerSideEncryptionConfiguration?: ServerSideEncryptionConfiguration;
  Status?: IndexStatus | string;
  Description?: string;
  CreatedAt?: Date;
  UpdatedAt?: Date;
  DocumentMetadataConfigurations?: DocumentMetadataConfiguration[];
  IndexStatistics?: IndexStatistics;
  ErrorMessage?: string;
  CapacityUnits?: CapacityUnitsConfiguration;
  UserTokenConfigurations?: UserTokenConfiguration[];
  UserContextPolicy?: UserContextPolicy | string;
  UserGroupResolutionConfiguration?: UserGroupResolutionConfiguration;
}
export interface DescribePrincipalMappingRequest {
  IndexId: string | undefined;
  DataSourceId?: string;
  GroupId: string | undefined;
}
export declare enum PrincipalMappingStatus {
  DELETED = "DELETED",
  DELETING = "DELETING",
  FAILED = "FAILED",
  PROCESSING = "PROCESSING",
  SUCCEEDED = "SUCCEEDED",
}
export interface GroupOrderingIdSummary {
  Status?: PrincipalMappingStatus | string;
  LastUpdatedAt?: Date;
  ReceivedAt?: Date;
  OrderingId?: number;
  FailureReason?: string;
}
export interface DescribePrincipalMappingResponse {
  IndexId?: string;
  DataSourceId?: string;
  GroupId?: string;
  GroupOrderingIdSummaries?: GroupOrderingIdSummary[];
}
export interface DescribeQuerySuggestionsBlockListRequest {
  IndexId: string | undefined;
  Id: string | undefined;
}
export declare enum QuerySuggestionsBlockListStatus {
  ACTIVE = "ACTIVE",
  ACTIVE_BUT_UPDATE_FAILED = "ACTIVE_BUT_UPDATE_FAILED",
  CREATING = "CREATING",
  DELETING = "DELETING",
  FAILED = "FAILED",
  UPDATING = "UPDATING",
}
export interface DescribeQuerySuggestionsBlockListResponse {
  IndexId?: string;
  Id?: string;
  Name?: string;
  Description?: string;
  Status?: QuerySuggestionsBlockListStatus | string;
  ErrorMessage?: string;
  CreatedAt?: Date;
  UpdatedAt?: Date;
  SourceS3Path?: S3Path;
  ItemCount?: number;
  FileSizeBytes?: number;
  RoleArn?: string;
}
export interface DescribeQuerySuggestionsConfigRequest {
  IndexId: string | undefined;
}
export declare enum Mode {
  ENABLED = "ENABLED",
  LEARN_ONLY = "LEARN_ONLY",
}
export declare enum QuerySuggestionsStatus {
  ACTIVE = "ACTIVE",
  UPDATING = "UPDATING",
}
export interface DescribeQuerySuggestionsConfigResponse {
  Mode?: Mode | string;
  Status?: QuerySuggestionsStatus | string;
  QueryLogLookBackWindowInDays?: number;
  IncludeQueriesWithoutUserInformation?: boolean;
  MinimumNumberOfQueryingUsers?: number;
  MinimumQueryCount?: number;
  LastSuggestionsBuildTime?: Date;
  LastClearTime?: Date;
  TotalSuggestionsCount?: number;
}
export interface DescribeThesaurusRequest {
  Id: string | undefined;
  IndexId: string | undefined;
}
export declare enum ThesaurusStatus {
  ACTIVE = "ACTIVE",
  ACTIVE_BUT_UPDATE_FAILED = "ACTIVE_BUT_UPDATE_FAILED",
  CREATING = "CREATING",
  DELETING = "DELETING",
  FAILED = "FAILED",
  UPDATING = "UPDATING",
}
export interface DescribeThesaurusResponse {
  Id?: string;
  IndexId?: string;
  Name?: string;
  Description?: string;
  Status?: ThesaurusStatus | string;
  ErrorMessage?: string;
  CreatedAt?: Date;
  UpdatedAt?: Date;
  RoleArn?: string;
  SourceS3Path?: S3Path;
  FileSizeBytes?: number;
  TermCount?: number;
  SynonymRuleCount?: number;
}
export interface DisassociateEntitiesFromExperienceRequest {
  Id: string | undefined;
  IndexId: string | undefined;
  EntityList: EntityConfiguration[] | undefined;
}
export interface DisassociateEntitiesFromExperienceResponse {
  FailedEntityList?: FailedEntity[];
}
export interface DisassociatePersonasFromEntitiesRequest {
  Id: string | undefined;
  IndexId: string | undefined;
  EntityIds: string[] | undefined;
}
export interface DisassociatePersonasFromEntitiesResponse {
  FailedEntityList?: FailedEntity[];
}
export interface GetQuerySuggestionsRequest {
  IndexId: string | undefined;
  QueryText: string | undefined;
  MaxSuggestionsCount?: number;
}
export interface SuggestionHighlight {
  BeginOffset?: number;
  EndOffset?: number;
}
export interface SuggestionTextWithHighlights {
  Text?: string;
  Highlights?: SuggestionHighlight[];
}
export interface SuggestionValue {
  Text?: SuggestionTextWithHighlights;
}
export interface Suggestion {
  Id?: string;
  Value?: SuggestionValue;
}
export interface GetQuerySuggestionsResponse {
  QuerySuggestionsId?: string;
  Suggestions?: Suggestion[];
}
export declare enum Interval {
  ONE_MONTH_AGO = "ONE_MONTH_AGO",
  ONE_WEEK_AGO = "ONE_WEEK_AGO",
  THIS_MONTH = "THIS_MONTH",
  THIS_WEEK = "THIS_WEEK",
  TWO_MONTHS_AGO = "TWO_MONTHS_AGO",
  TWO_WEEKS_AGO = "TWO_WEEKS_AGO",
}
export declare enum MetricType {
  AGG_QUERY_DOC_METRICS = "AGG_QUERY_DOC_METRICS",
  DOCS_BY_CLICK_COUNT = "DOCS_BY_CLICK_COUNT",
  QUERIES_BY_COUNT = "QUERIES_BY_COUNT",
  QUERIES_BY_ZERO_CLICK_RATE = "QUERIES_BY_ZERO_CLICK_RATE",
  QUERIES_BY_ZERO_RESULT_RATE = "QUERIES_BY_ZERO_RESULT_RATE",
  TREND_QUERY_DOC_METRICS = "TREND_QUERY_DOC_METRICS",
}
export interface GetSnapshotsRequest {
  IndexId: string | undefined;
  Interval: Interval | string | undefined;
  MetricType: MetricType | string | undefined;
  NextToken?: string;
  MaxResults?: number;
}
export interface TimeRange {
  StartTime?: Date;
  EndTime?: Date;
}
export interface GetSnapshotsResponse {
  SnapShotTimeFilter?: TimeRange;
  SnapshotsDataHeader?: string[];
  SnapshotsData?: string[][];
  NextToken?: string;
}
export declare class InvalidRequestException extends __BaseException {
  readonly name: "InvalidRequestException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<InvalidRequestException, __BaseException>
  );
}
export interface ListAccessControlConfigurationsRequest {
  IndexId: string | undefined;
  NextToken?: string;
  MaxResults?: number;
}
export interface ListAccessControlConfigurationsResponse {
  NextToken?: string;
  AccessControlConfigurations: AccessControlConfigurationSummary[] | undefined;
}
export interface ListDataSourcesRequest {
  IndexId: string | undefined;
  NextToken?: string;
  MaxResults?: number;
}
export interface DataSourceSummary {
  Name?: string;
  Id?: string;
  Type?: DataSourceType | string;
  CreatedAt?: Date;
  UpdatedAt?: Date;
  Status?: DataSourceStatus | string;
  LanguageCode?: string;
}
export interface ListDataSourcesResponse {
  SummaryItems?: DataSourceSummary[];
  NextToken?: string;
}
export declare enum DataSourceSyncJobStatus {
  ABORTED = "ABORTED",
  FAILED = "FAILED",
  INCOMPLETE = "INCOMPLETE",
  STOPPING = "STOPPING",
  SUCCEEDED = "SUCCEEDED",
  SYNCING = "SYNCING",
  SYNCING_INDEXING = "SYNCING_INDEXING",
}
export interface ListDataSourceSyncJobsRequest {
  Id: string | undefined;
  IndexId: string | undefined;
  NextToken?: string;
  MaxResults?: number;
  StartTimeFilter?: TimeRange;
  StatusFilter?: DataSourceSyncJobStatus | string;
}
export interface DataSourceSyncJobMetrics {
  DocumentsAdded?: string;
  DocumentsModified?: string;
  DocumentsDeleted?: string;
  DocumentsFailed?: string;
  DocumentsScanned?: string;
}
export interface DataSourceSyncJob {
  ExecutionId?: string;
  StartTime?: Date;
  EndTime?: Date;
  Status?: DataSourceSyncJobStatus | string;
  ErrorMessage?: string;
  ErrorCode?: ErrorCode | string;
  DataSourceErrorCode?: string;
  Metrics?: DataSourceSyncJobMetrics;
}
export interface ListDataSourceSyncJobsResponse {
  History?: DataSourceSyncJob[];
  NextToken?: string;
}
export interface ListEntityPersonasRequest {
  Id: string | undefined;
  IndexId: string | undefined;
  NextToken?: string;
  MaxResults?: number;
}
export interface PersonasSummary {
  EntityId?: string;
  Persona?: Persona | string;
  CreatedAt?: Date;
  UpdatedAt?: Date;
}
export interface ListEntityPersonasResponse {
  SummaryItems?: PersonasSummary[];
  NextToken?: string;
}
export interface ListExperienceEntitiesRequest {
  Id: string | undefined;
  IndexId: string | undefined;
  NextToken?: string;
}
export interface EntityDisplayData {
  UserName?: string;
  GroupName?: string;
  IdentifiedUserName?: string;
  FirstName?: string;
  LastName?: string;
}
export interface ExperienceEntitiesSummary {
  EntityId?: string;
  EntityType?: EntityType | string;
  DisplayData?: EntityDisplayData;
}
export interface ListExperienceEntitiesResponse {
  SummaryItems?: ExperienceEntitiesSummary[];
  NextToken?: string;
}
export interface ListExperiencesRequest {
  IndexId: string | undefined;
  NextToken?: string;
  MaxResults?: number;
}
export interface ExperiencesSummary {
  Name?: string;
  Id?: string;
  CreatedAt?: Date;
  Status?: ExperienceStatus | string;
  Endpoints?: ExperienceEndpoint[];
}
export interface ListExperiencesResponse {
  SummaryItems?: ExperiencesSummary[];
  NextToken?: string;
}
export interface ListFaqsRequest {
  IndexId: string | undefined;
  NextToken?: string;
  MaxResults?: number;
}
export interface FaqSummary {
  Id?: string;
  Name?: string;
  Status?: FaqStatus | string;
  CreatedAt?: Date;
  UpdatedAt?: Date;
  FileFormat?: FaqFileFormat | string;
  LanguageCode?: string;
}
export interface ListFaqsResponse {
  NextToken?: string;
  FaqSummaryItems?: FaqSummary[];
}
export interface ListGroupsOlderThanOrderingIdRequest {
  IndexId: string | undefined;
  DataSourceId?: string;
  OrderingId: number | undefined;
  NextToken?: string;
  MaxResults?: number;
}
export interface GroupSummary {
  GroupId?: string;
  OrderingId?: number;
}
export interface ListGroupsOlderThanOrderingIdResponse {
  GroupsSummaries?: GroupSummary[];
  NextToken?: string;
}
export interface ListIndicesRequest {
  NextToken?: string;
  MaxResults?: number;
}
export interface IndexConfigurationSummary {
  Name?: string;
  Id?: string;
  Edition?: IndexEdition | string;
  CreatedAt: Date | undefined;
  UpdatedAt: Date | undefined;
  Status: IndexStatus | string | undefined;
}
export interface ListIndicesResponse {
  IndexConfigurationSummaryItems?: IndexConfigurationSummary[];
  NextToken?: string;
}
export interface ListQuerySuggestionsBlockListsRequest {
  IndexId: string | undefined;
  NextToken?: string;
  MaxResults?: number;
}
export interface QuerySuggestionsBlockListSummary {
  Id?: string;
  Name?: string;
  Status?: QuerySuggestionsBlockListStatus | string;
  CreatedAt?: Date;
  UpdatedAt?: Date;
  ItemCount?: number;
}
export interface ListQuerySuggestionsBlockListsResponse {
  BlockListSummaryItems?: QuerySuggestionsBlockListSummary[];
  NextToken?: string;
}
export interface ListTagsForResourceRequest {
  ResourceARN: string | undefined;
}
export interface ListTagsForResourceResponse {
  Tags?: Tag[];
}
export declare class ResourceUnavailableException extends __BaseException {
  readonly name: "ResourceUnavailableException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<ResourceUnavailableException, __BaseException>
  );
}
export interface ListThesauriRequest {
  IndexId: string | undefined;
  NextToken?: string;
  MaxResults?: number;
}
export interface ThesaurusSummary {
  Id?: string;
  Name?: string;
  Status?: ThesaurusStatus | string;
  CreatedAt?: Date;
  UpdatedAt?: Date;
}
export interface ListThesauriResponse {
  NextToken?: string;
  ThesaurusSummaryItems?: ThesaurusSummary[];
}
export interface MemberGroup {
  GroupId: string | undefined;
  DataSourceId?: string;
}
export interface MemberUser {
  UserId: string | undefined;
}
export interface GroupMembers {
  MemberGroups?: MemberGroup[];
  MemberUsers?: MemberUser[];
  S3PathforGroupMembers?: S3Path;
}
export interface PutPrincipalMappingRequest {
  IndexId: string | undefined;
  DataSourceId?: string;
  GroupId: string | undefined;
  GroupMembers: GroupMembers | undefined;
  OrderingId?: number;
  RoleArn?: string;
}
export interface DocumentRelevanceConfiguration {
  Name: string | undefined;
  Relevance: Relevance | undefined;
}
export declare enum QueryResultType {
  ANSWER = "ANSWER",
  DOCUMENT = "DOCUMENT",
  QUESTION_ANSWER = "QUESTION_ANSWER",
}
export declare enum SortOrder {
  ASC = "ASC",
  DESC = "DESC",
}
export interface SortingConfiguration {
  DocumentAttributeKey: string | undefined;
  SortOrder: SortOrder | string | undefined;
}
export interface SpellCorrectionConfiguration {
  IncludeQuerySpellCheckSuggestions: boolean | undefined;
}
export interface DataSourceGroup {
  GroupId: string | undefined;
  DataSourceId: string | undefined;
}
export interface UserContext {
  Token?: string;
  UserId?: string;
  Groups?: string[];
  DataSourceGroups?: DataSourceGroup[];
}
export declare enum QueryResultFormat {
  TABLE = "TABLE",
  TEXT = "TEXT",
}
export declare enum ScoreConfidence {
  HIGH = "HIGH",
  LOW = "LOW",
  MEDIUM = "MEDIUM",
  NOT_AVAILABLE = "NOT_AVAILABLE",
  VERY_HIGH = "VERY_HIGH",
}
export interface ScoreAttributes {
  ScoreConfidence?: ScoreConfidence | string;
}
export interface TableCell {
  Value?: string;
  TopAnswer?: boolean;
  Highlighted?: boolean;
  Header?: boolean;
}
export interface TableRow {
  Cells?: TableCell[];
}
export interface TableExcerpt {
  Rows?: TableRow[];
  TotalNumberOfRows?: number;
}
export interface QueryResultItem {
  Id?: string;
  Type?: QueryResultType | string;
  Format?: QueryResultFormat | string;
  AdditionalAttributes?: AdditionalResultAttribute[];
  DocumentId?: string;
  DocumentTitle?: TextWithHighlights;
  DocumentExcerpt?: TextWithHighlights;
  DocumentURI?: string;
  DocumentAttributes?: DocumentAttribute[];
  ScoreAttributes?: ScoreAttributes;
  FeedbackToken?: string;
  TableExcerpt?: TableExcerpt;
}
export interface Correction {
  BeginOffset?: number;
  EndOffset?: number;
  Term?: string;
  CorrectedTerm?: string;
}
export interface SpellCorrectedQuery {
  SuggestedQueryText?: string;
  Corrections?: Correction[];
}
export declare enum WarningCode {
  QUERY_LANGUAGE_INVALID_SYNTAX = "QUERY_LANGUAGE_INVALID_SYNTAX",
}
export interface Warning {
  Message?: string;
  Code?: WarningCode | string;
}
export declare class ResourceInUseException extends __BaseException {
  readonly name: "ResourceInUseException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<ResourceInUseException, __BaseException>
  );
}
export interface StartDataSourceSyncJobRequest {
  Id: string | undefined;
  IndexId: string | undefined;
}
export interface StartDataSourceSyncJobResponse {
  ExecutionId?: string;
}
export interface StopDataSourceSyncJobRequest {
  Id: string | undefined;
  IndexId: string | undefined;
}
export interface ClickFeedback {
  ResultId: string | undefined;
  ClickTime: Date | undefined;
}
export declare enum RelevanceType {
  NOT_RELEVANT = "NOT_RELEVANT",
  RELEVANT = "RELEVANT",
}
export interface RelevanceFeedback {
  ResultId: string | undefined;
  RelevanceValue: RelevanceType | string | undefined;
}
export interface SubmitFeedbackRequest {
  IndexId: string | undefined;
  QueryId: string | undefined;
  ClickFeedbackItems?: ClickFeedback[];
  RelevanceFeedbackItems?: RelevanceFeedback[];
}
export interface TagResourceRequest {
  ResourceARN: string | undefined;
  Tags: Tag[] | undefined;
}
export interface TagResourceResponse {}
export interface UntagResourceRequest {
  ResourceARN: string | undefined;
  TagKeys: string[] | undefined;
}
export interface UntagResourceResponse {}
export interface UpdateAccessControlConfigurationRequest {
  IndexId: string | undefined;
  Id: string | undefined;
  Name?: string;
  Description?: string;
  AccessControlList?: Principal[];
  HierarchicalAccessControlList?: HierarchicalPrincipal[];
}
export interface UpdateAccessControlConfigurationResponse {}
export interface UpdateDataSourceRequest {
  Id: string | undefined;
  Name?: string;
  IndexId: string | undefined;
  Configuration?: DataSourceConfiguration;
  VpcConfiguration?: DataSourceVpcConfiguration;
  Description?: string;
  Schedule?: string;
  RoleArn?: string;
  LanguageCode?: string;
  CustomDocumentEnrichmentConfiguration?: CustomDocumentEnrichmentConfiguration;
}
export interface UpdateExperienceRequest {
  Id: string | undefined;
  Name?: string;
  IndexId: string | undefined;
  RoleArn?: string;
  Configuration?: ExperienceConfiguration;
  Description?: string;
}
export interface UpdateIndexRequest {
  Id: string | undefined;
  Name?: string;
  RoleArn?: string;
  Description?: string;
  DocumentMetadataConfigurationUpdates?: DocumentMetadataConfiguration[];
  CapacityUnits?: CapacityUnitsConfiguration;
  UserTokenConfigurations?: UserTokenConfiguration[];
  UserContextPolicy?: UserContextPolicy | string;
  UserGroupResolutionConfiguration?: UserGroupResolutionConfiguration;
}
export interface UpdateQuerySuggestionsBlockListRequest {
  IndexId: string | undefined;
  Id: string | undefined;
  Name?: string;
  Description?: string;
  SourceS3Path?: S3Path;
  RoleArn?: string;
}
export declare const AccessControlConfigurationSummaryFilterSensitiveLog: (
  obj: AccessControlConfigurationSummary
) => any;
export declare const AccessControlListConfigurationFilterSensitiveLog: (
  obj: AccessControlListConfiguration
) => any;
export declare const AclConfigurationFilterSensitiveLog: (
  obj: AclConfiguration
) => any;
export declare const HighlightFilterSensitiveLog: (obj: Highlight) => any;
export declare const TextWithHighlightsFilterSensitiveLog: (
  obj: TextWithHighlights
) => any;
export declare const AdditionalResultAttributeValueFilterSensitiveLog: (
  obj: AdditionalResultAttributeValue
) => any;
export declare const AdditionalResultAttributeFilterSensitiveLog: (
  obj: AdditionalResultAttribute
) => any;
export declare const DataSourceToIndexFieldMappingFilterSensitiveLog: (
  obj: DataSourceToIndexFieldMapping
) => any;
export declare const S3PathFilterSensitiveLog: (obj: S3Path) => any;
export declare const DataSourceVpcConfigurationFilterSensitiveLog: (
  obj: DataSourceVpcConfiguration
) => any;
export declare const AlfrescoConfigurationFilterSensitiveLog: (
  obj: AlfrescoConfiguration
) => any;
export declare const EntityConfigurationFilterSensitiveLog: (
  obj: EntityConfiguration
) => any;
export declare const AssociateEntitiesToExperienceRequestFilterSensitiveLog: (
  obj: AssociateEntitiesToExperienceRequest
) => any;
export declare const FailedEntityFilterSensitiveLog: (obj: FailedEntity) => any;
export declare const AssociateEntitiesToExperienceResponseFilterSensitiveLog: (
  obj: AssociateEntitiesToExperienceResponse
) => any;
export declare const EntityPersonaConfigurationFilterSensitiveLog: (
  obj: EntityPersonaConfiguration
) => any;
export declare const AssociatePersonasToEntitiesRequestFilterSensitiveLog: (
  obj: AssociatePersonasToEntitiesRequest
) => any;
export declare const AssociatePersonasToEntitiesResponseFilterSensitiveLog: (
  obj: AssociatePersonasToEntitiesResponse
) => any;
export declare const DocumentAttributeValueFilterSensitiveLog: (
  obj: DocumentAttributeValue
) => any;
export declare const DocumentAttributeFilterSensitiveLog: (
  obj: DocumentAttribute
) => any;
export declare const BasicAuthenticationConfigurationFilterSensitiveLog: (
  obj: BasicAuthenticationConfiguration
) => any;
export declare const AuthenticationConfigurationFilterSensitiveLog: (
  obj: AuthenticationConfiguration
) => any;
export declare const DataSourceSyncJobMetricTargetFilterSensitiveLog: (
  obj: DataSourceSyncJobMetricTarget
) => any;
export declare const BatchDeleteDocumentRequestFilterSensitiveLog: (
  obj: BatchDeleteDocumentRequest
) => any;
export declare const BatchDeleteDocumentResponseFailedDocumentFilterSensitiveLog: (
  obj: BatchDeleteDocumentResponseFailedDocument
) => any;
export declare const BatchDeleteDocumentResponseFilterSensitiveLog: (
  obj: BatchDeleteDocumentResponse
) => any;
export declare const DocumentInfoFilterSensitiveLog: (obj: DocumentInfo) => any;
export declare const BatchGetDocumentStatusRequestFilterSensitiveLog: (
  obj: BatchGetDocumentStatusRequest
) => any;
export declare const StatusFilterSensitiveLog: (obj: Status) => any;
export declare const BatchGetDocumentStatusResponseErrorFilterSensitiveLog: (
  obj: BatchGetDocumentStatusResponseError
) => any;
export declare const BatchGetDocumentStatusResponseFilterSensitiveLog: (
  obj: BatchGetDocumentStatusResponse
) => any;
export declare const DocumentAttributeConditionFilterSensitiveLog: (
  obj: DocumentAttributeCondition
) => any;
export declare const DocumentAttributeTargetFilterSensitiveLog: (
  obj: DocumentAttributeTarget
) => any;
export declare const InlineCustomDocumentEnrichmentConfigurationFilterSensitiveLog: (
  obj: InlineCustomDocumentEnrichmentConfiguration
) => any;
export declare const HookConfigurationFilterSensitiveLog: (
  obj: HookConfiguration
) => any;
export declare const CustomDocumentEnrichmentConfigurationFilterSensitiveLog: (
  obj: CustomDocumentEnrichmentConfiguration
) => any;
export declare const PrincipalFilterSensitiveLog: (obj: Principal) => any;
export declare const HierarchicalPrincipalFilterSensitiveLog: (
  obj: HierarchicalPrincipal
) => any;
export declare const DocumentFilterSensitiveLog: (obj: Document) => any;
export declare const BatchPutDocumentRequestFilterSensitiveLog: (
  obj: BatchPutDocumentRequest
) => any;
export declare const BatchPutDocumentResponseFailedDocumentFilterSensitiveLog: (
  obj: BatchPutDocumentResponseFailedDocument
) => any;
export declare const BatchPutDocumentResponseFilterSensitiveLog: (
  obj: BatchPutDocumentResponse
) => any;
export declare const ClearQuerySuggestionsRequestFilterSensitiveLog: (
  obj: ClearQuerySuggestionsRequest
) => any;
export declare const CreateAccessControlConfigurationRequestFilterSensitiveLog: (
  obj: CreateAccessControlConfigurationRequest
) => any;
export declare const CreateAccessControlConfigurationResponseFilterSensitiveLog: (
  obj: CreateAccessControlConfigurationResponse
) => any;
export declare const BoxConfigurationFilterSensitiveLog: (
  obj: BoxConfiguration
) => any;
export declare const ConfluenceAttachmentToIndexFieldMappingFilterSensitiveLog: (
  obj: ConfluenceAttachmentToIndexFieldMapping
) => any;
export declare const ConfluenceAttachmentConfigurationFilterSensitiveLog: (
  obj: ConfluenceAttachmentConfiguration
) => any;
export declare const ConfluenceBlogToIndexFieldMappingFilterSensitiveLog: (
  obj: ConfluenceBlogToIndexFieldMapping
) => any;
export declare const ConfluenceBlogConfigurationFilterSensitiveLog: (
  obj: ConfluenceBlogConfiguration
) => any;
export declare const ConfluencePageToIndexFieldMappingFilterSensitiveLog: (
  obj: ConfluencePageToIndexFieldMapping
) => any;
export declare const ConfluencePageConfigurationFilterSensitiveLog: (
  obj: ConfluencePageConfiguration
) => any;
export declare const ProxyConfigurationFilterSensitiveLog: (
  obj: ProxyConfiguration
) => any;
export declare const ConfluenceSpaceToIndexFieldMappingFilterSensitiveLog: (
  obj: ConfluenceSpaceToIndexFieldMapping
) => any;
export declare const ConfluenceSpaceConfigurationFilterSensitiveLog: (
  obj: ConfluenceSpaceConfiguration
) => any;
export declare const ConfluenceConfigurationFilterSensitiveLog: (
  obj: ConfluenceConfiguration
) => any;
export declare const ColumnConfigurationFilterSensitiveLog: (
  obj: ColumnConfiguration
) => any;
export declare const ConnectionConfigurationFilterSensitiveLog: (
  obj: ConnectionConfiguration
) => any;
export declare const SqlConfigurationFilterSensitiveLog: (
  obj: SqlConfiguration
) => any;
export declare const DatabaseConfigurationFilterSensitiveLog: (
  obj: DatabaseConfiguration
) => any;
export declare const FsxConfigurationFilterSensitiveLog: (
  obj: FsxConfiguration
) => any;
export declare const GitHubDocumentCrawlPropertiesFilterSensitiveLog: (
  obj: GitHubDocumentCrawlProperties
) => any;
export declare const OnPremiseConfigurationFilterSensitiveLog: (
  obj: OnPremiseConfiguration
) => any;
export declare const SaaSConfigurationFilterSensitiveLog: (
  obj: SaaSConfiguration
) => any;
export declare const GitHubConfigurationFilterSensitiveLog: (
  obj: GitHubConfiguration
) => any;
export declare const GoogleDriveConfigurationFilterSensitiveLog: (
  obj: GoogleDriveConfiguration
) => any;
export declare const JiraConfigurationFilterSensitiveLog: (
  obj: JiraConfiguration
) => any;
export declare const OneDriveUsersFilterSensitiveLog: (
  obj: OneDriveUsers
) => any;
export declare const OneDriveConfigurationFilterSensitiveLog: (
  obj: OneDriveConfiguration
) => any;
export declare const QuipConfigurationFilterSensitiveLog: (
  obj: QuipConfiguration
) => any;
export declare const DocumentsMetadataConfigurationFilterSensitiveLog: (
  obj: DocumentsMetadataConfiguration
) => any;
export declare const S3DataSourceConfigurationFilterSensitiveLog: (
  obj: S3DataSourceConfiguration
) => any;
export declare const SalesforceChatterFeedConfigurationFilterSensitiveLog: (
  obj: SalesforceChatterFeedConfiguration
) => any;
export declare const SalesforceCustomKnowledgeArticleTypeConfigurationFilterSensitiveLog: (
  obj: SalesforceCustomKnowledgeArticleTypeConfiguration
) => any;
export declare const SalesforceStandardKnowledgeArticleTypeConfigurationFilterSensitiveLog: (
  obj: SalesforceStandardKnowledgeArticleTypeConfiguration
) => any;
export declare const SalesforceKnowledgeArticleConfigurationFilterSensitiveLog: (
  obj: SalesforceKnowledgeArticleConfiguration
) => any;
export declare const SalesforceStandardObjectAttachmentConfigurationFilterSensitiveLog: (
  obj: SalesforceStandardObjectAttachmentConfiguration
) => any;
export declare const SalesforceStandardObjectConfigurationFilterSensitiveLog: (
  obj: SalesforceStandardObjectConfiguration
) => any;
export declare const SalesforceConfigurationFilterSensitiveLog: (
  obj: SalesforceConfiguration
) => any;
export declare const ServiceNowKnowledgeArticleConfigurationFilterSensitiveLog: (
  obj: ServiceNowKnowledgeArticleConfiguration
) => any;
export declare const ServiceNowServiceCatalogConfigurationFilterSensitiveLog: (
  obj: ServiceNowServiceCatalogConfiguration
) => any;
export declare const ServiceNowConfigurationFilterSensitiveLog: (
  obj: ServiceNowConfiguration
) => any;
export declare const SharePointConfigurationFilterSensitiveLog: (
  obj: SharePointConfiguration
) => any;
export declare const SlackConfigurationFilterSensitiveLog: (
  obj: SlackConfiguration
) => any;
export declare const TemplateConfigurationFilterSensitiveLog: (
  obj: TemplateConfiguration
) => any;
export declare const SeedUrlConfigurationFilterSensitiveLog: (
  obj: SeedUrlConfiguration
) => any;
export declare const SiteMapsConfigurationFilterSensitiveLog: (
  obj: SiteMapsConfiguration
) => any;
export declare const UrlsFilterSensitiveLog: (obj: Urls) => any;
export declare const WebCrawlerConfigurationFilterSensitiveLog: (
  obj: WebCrawlerConfiguration
) => any;
export declare const WorkDocsConfigurationFilterSensitiveLog: (
  obj: WorkDocsConfiguration
) => any;
export declare const DataSourceConfigurationFilterSensitiveLog: (
  obj: DataSourceConfiguration
) => any;
export declare const TagFilterSensitiveLog: (obj: Tag) => any;
export declare const CreateDataSourceRequestFilterSensitiveLog: (
  obj: CreateDataSourceRequest
) => any;
export declare const CreateDataSourceResponseFilterSensitiveLog: (
  obj: CreateDataSourceResponse
) => any;
export declare const ContentSourceConfigurationFilterSensitiveLog: (
  obj: ContentSourceConfiguration
) => any;
export declare const UserIdentityConfigurationFilterSensitiveLog: (
  obj: UserIdentityConfiguration
) => any;
export declare const ExperienceConfigurationFilterSensitiveLog: (
  obj: ExperienceConfiguration
) => any;
export declare const CreateExperienceRequestFilterSensitiveLog: (
  obj: CreateExperienceRequest
) => any;
export declare const CreateExperienceResponseFilterSensitiveLog: (
  obj: CreateExperienceResponse
) => any;
export declare const CreateFaqRequestFilterSensitiveLog: (
  obj: CreateFaqRequest
) => any;
export declare const CreateFaqResponseFilterSensitiveLog: (
  obj: CreateFaqResponse
) => any;
export declare const ServerSideEncryptionConfigurationFilterSensitiveLog: (
  obj: ServerSideEncryptionConfiguration
) => any;
export declare const UserGroupResolutionConfigurationFilterSensitiveLog: (
  obj: UserGroupResolutionConfiguration
) => any;
export declare const JsonTokenTypeConfigurationFilterSensitiveLog: (
  obj: JsonTokenTypeConfiguration
) => any;
export declare const JwtTokenTypeConfigurationFilterSensitiveLog: (
  obj: JwtTokenTypeConfiguration
) => any;
export declare const UserTokenConfigurationFilterSensitiveLog: (
  obj: UserTokenConfiguration
) => any;
export declare const CreateIndexRequestFilterSensitiveLog: (
  obj: CreateIndexRequest
) => any;
export declare const CreateIndexResponseFilterSensitiveLog: (
  obj: CreateIndexResponse
) => any;
export declare const CreateQuerySuggestionsBlockListRequestFilterSensitiveLog: (
  obj: CreateQuerySuggestionsBlockListRequest
) => any;
export declare const CreateQuerySuggestionsBlockListResponseFilterSensitiveLog: (
  obj: CreateQuerySuggestionsBlockListResponse
) => any;
export declare const CreateThesaurusRequestFilterSensitiveLog: (
  obj: CreateThesaurusRequest
) => any;
export declare const CreateThesaurusResponseFilterSensitiveLog: (
  obj: CreateThesaurusResponse
) => any;
export declare const DeleteAccessControlConfigurationRequestFilterSensitiveLog: (
  obj: DeleteAccessControlConfigurationRequest
) => any;
export declare const DeleteAccessControlConfigurationResponseFilterSensitiveLog: (
  obj: DeleteAccessControlConfigurationResponse
) => any;
export declare const DeleteDataSourceRequestFilterSensitiveLog: (
  obj: DeleteDataSourceRequest
) => any;
export declare const DeleteExperienceRequestFilterSensitiveLog: (
  obj: DeleteExperienceRequest
) => any;
export declare const DeleteExperienceResponseFilterSensitiveLog: (
  obj: DeleteExperienceResponse
) => any;
export declare const DeleteFaqRequestFilterSensitiveLog: (
  obj: DeleteFaqRequest
) => any;
export declare const DeleteIndexRequestFilterSensitiveLog: (
  obj: DeleteIndexRequest
) => any;
export declare const DeletePrincipalMappingRequestFilterSensitiveLog: (
  obj: DeletePrincipalMappingRequest
) => any;
export declare const DeleteQuerySuggestionsBlockListRequestFilterSensitiveLog: (
  obj: DeleteQuerySuggestionsBlockListRequest
) => any;
export declare const DeleteThesaurusRequestFilterSensitiveLog: (
  obj: DeleteThesaurusRequest
) => any;
export declare const DescribeAccessControlConfigurationRequestFilterSensitiveLog: (
  obj: DescribeAccessControlConfigurationRequest
) => any;
export declare const DescribeAccessControlConfigurationResponseFilterSensitiveLog: (
  obj: DescribeAccessControlConfigurationResponse
) => any;
export declare const DescribeDataSourceRequestFilterSensitiveLog: (
  obj: DescribeDataSourceRequest
) => any;
export declare const DescribeDataSourceResponseFilterSensitiveLog: (
  obj: DescribeDataSourceResponse
) => any;
export declare const DescribeExperienceRequestFilterSensitiveLog: (
  obj: DescribeExperienceRequest
) => any;
export declare const ExperienceEndpointFilterSensitiveLog: (
  obj: ExperienceEndpoint
) => any;
export declare const DescribeExperienceResponseFilterSensitiveLog: (
  obj: DescribeExperienceResponse
) => any;
export declare const DescribeFaqRequestFilterSensitiveLog: (
  obj: DescribeFaqRequest
) => any;
export declare const DescribeFaqResponseFilterSensitiveLog: (
  obj: DescribeFaqResponse
) => any;
export declare const DescribeIndexRequestFilterSensitiveLog: (
  obj: DescribeIndexRequest
) => any;
export declare const CapacityUnitsConfigurationFilterSensitiveLog: (
  obj: CapacityUnitsConfiguration
) => any;
export declare const RelevanceFilterSensitiveLog: (obj: Relevance) => any;
export declare const SearchFilterSensitiveLog: (obj: Search) => any;
export declare const DocumentMetadataConfigurationFilterSensitiveLog: (
  obj: DocumentMetadataConfiguration
) => any;
export declare const FaqStatisticsFilterSensitiveLog: (
  obj: FaqStatistics
) => any;
export declare const TextDocumentStatisticsFilterSensitiveLog: (
  obj: TextDocumentStatistics
) => any;
export declare const IndexStatisticsFilterSensitiveLog: (
  obj: IndexStatistics
) => any;
export declare const DescribeIndexResponseFilterSensitiveLog: (
  obj: DescribeIndexResponse
) => any;
export declare const DescribePrincipalMappingRequestFilterSensitiveLog: (
  obj: DescribePrincipalMappingRequest
) => any;
export declare const GroupOrderingIdSummaryFilterSensitiveLog: (
  obj: GroupOrderingIdSummary
) => any;
export declare const DescribePrincipalMappingResponseFilterSensitiveLog: (
  obj: DescribePrincipalMappingResponse
) => any;
export declare const DescribeQuerySuggestionsBlockListRequestFilterSensitiveLog: (
  obj: DescribeQuerySuggestionsBlockListRequest
) => any;
export declare const DescribeQuerySuggestionsBlockListResponseFilterSensitiveLog: (
  obj: DescribeQuerySuggestionsBlockListResponse
) => any;
export declare const DescribeQuerySuggestionsConfigRequestFilterSensitiveLog: (
  obj: DescribeQuerySuggestionsConfigRequest
) => any;
export declare const DescribeQuerySuggestionsConfigResponseFilterSensitiveLog: (
  obj: DescribeQuerySuggestionsConfigResponse
) => any;
export declare const DescribeThesaurusRequestFilterSensitiveLog: (
  obj: DescribeThesaurusRequest
) => any;
export declare const DescribeThesaurusResponseFilterSensitiveLog: (
  obj: DescribeThesaurusResponse
) => any;
export declare const DisassociateEntitiesFromExperienceRequestFilterSensitiveLog: (
  obj: DisassociateEntitiesFromExperienceRequest
) => any;
export declare const DisassociateEntitiesFromExperienceResponseFilterSensitiveLog: (
  obj: DisassociateEntitiesFromExperienceResponse
) => any;
export declare const DisassociatePersonasFromEntitiesRequestFilterSensitiveLog: (
  obj: DisassociatePersonasFromEntitiesRequest
) => any;
export declare const DisassociatePersonasFromEntitiesResponseFilterSensitiveLog: (
  obj: DisassociatePersonasFromEntitiesResponse
) => any;
export declare const GetQuerySuggestionsRequestFilterSensitiveLog: (
  obj: GetQuerySuggestionsRequest
) => any;
export declare const SuggestionHighlightFilterSensitiveLog: (
  obj: SuggestionHighlight
) => any;
export declare const SuggestionTextWithHighlightsFilterSensitiveLog: (
  obj: SuggestionTextWithHighlights
) => any;
export declare const SuggestionValueFilterSensitiveLog: (
  obj: SuggestionValue
) => any;
export declare const SuggestionFilterSensitiveLog: (obj: Suggestion) => any;
export declare const GetQuerySuggestionsResponseFilterSensitiveLog: (
  obj: GetQuerySuggestionsResponse
) => any;
export declare const GetSnapshotsRequestFilterSensitiveLog: (
  obj: GetSnapshotsRequest
) => any;
export declare const TimeRangeFilterSensitiveLog: (obj: TimeRange) => any;
export declare const GetSnapshotsResponseFilterSensitiveLog: (
  obj: GetSnapshotsResponse
) => any;
export declare const ListAccessControlConfigurationsRequestFilterSensitiveLog: (
  obj: ListAccessControlConfigurationsRequest
) => any;
export declare const ListAccessControlConfigurationsResponseFilterSensitiveLog: (
  obj: ListAccessControlConfigurationsResponse
) => any;
export declare const ListDataSourcesRequestFilterSensitiveLog: (
  obj: ListDataSourcesRequest
) => any;
export declare const DataSourceSummaryFilterSensitiveLog: (
  obj: DataSourceSummary
) => any;
export declare const ListDataSourcesResponseFilterSensitiveLog: (
  obj: ListDataSourcesResponse
) => any;
export declare const ListDataSourceSyncJobsRequestFilterSensitiveLog: (
  obj: ListDataSourceSyncJobsRequest
) => any;
export declare const DataSourceSyncJobMetricsFilterSensitiveLog: (
  obj: DataSourceSyncJobMetrics
) => any;
export declare const DataSourceSyncJobFilterSensitiveLog: (
  obj: DataSourceSyncJob
) => any;
export declare const ListDataSourceSyncJobsResponseFilterSensitiveLog: (
  obj: ListDataSourceSyncJobsResponse
) => any;
export declare const ListEntityPersonasRequestFilterSensitiveLog: (
  obj: ListEntityPersonasRequest
) => any;
export declare const PersonasSummaryFilterSensitiveLog: (
  obj: PersonasSummary
) => any;
export declare const ListEntityPersonasResponseFilterSensitiveLog: (
  obj: ListEntityPersonasResponse
) => any;
export declare const ListExperienceEntitiesRequestFilterSensitiveLog: (
  obj: ListExperienceEntitiesRequest
) => any;
export declare const EntityDisplayDataFilterSensitiveLog: (
  obj: EntityDisplayData
) => any;
export declare const ExperienceEntitiesSummaryFilterSensitiveLog: (
  obj: ExperienceEntitiesSummary
) => any;
export declare const ListExperienceEntitiesResponseFilterSensitiveLog: (
  obj: ListExperienceEntitiesResponse
) => any;
export declare const ListExperiencesRequestFilterSensitiveLog: (
  obj: ListExperiencesRequest
) => any;
export declare const ExperiencesSummaryFilterSensitiveLog: (
  obj: ExperiencesSummary
) => any;
export declare const ListExperiencesResponseFilterSensitiveLog: (
  obj: ListExperiencesResponse
) => any;
export declare const ListFaqsRequestFilterSensitiveLog: (
  obj: ListFaqsRequest
) => any;
export declare const FaqSummaryFilterSensitiveLog: (obj: FaqSummary) => any;
export declare const ListFaqsResponseFilterSensitiveLog: (
  obj: ListFaqsResponse
) => any;
export declare const ListGroupsOlderThanOrderingIdRequestFilterSensitiveLog: (
  obj: ListGroupsOlderThanOrderingIdRequest
) => any;
export declare const GroupSummaryFilterSensitiveLog: (obj: GroupSummary) => any;
export declare const ListGroupsOlderThanOrderingIdResponseFilterSensitiveLog: (
  obj: ListGroupsOlderThanOrderingIdResponse
) => any;
export declare const ListIndicesRequestFilterSensitiveLog: (
  obj: ListIndicesRequest
) => any;
export declare const IndexConfigurationSummaryFilterSensitiveLog: (
  obj: IndexConfigurationSummary
) => any;
export declare const ListIndicesResponseFilterSensitiveLog: (
  obj: ListIndicesResponse
) => any;
export declare const ListQuerySuggestionsBlockListsRequestFilterSensitiveLog: (
  obj: ListQuerySuggestionsBlockListsRequest
) => any;
export declare const QuerySuggestionsBlockListSummaryFilterSensitiveLog: (
  obj: QuerySuggestionsBlockListSummary
) => any;
export declare const ListQuerySuggestionsBlockListsResponseFilterSensitiveLog: (
  obj: ListQuerySuggestionsBlockListsResponse
) => any;
export declare const ListTagsForResourceRequestFilterSensitiveLog: (
  obj: ListTagsForResourceRequest
) => any;
export declare const ListTagsForResourceResponseFilterSensitiveLog: (
  obj: ListTagsForResourceResponse
) => any;
export declare const ListThesauriRequestFilterSensitiveLog: (
  obj: ListThesauriRequest
) => any;
export declare const ThesaurusSummaryFilterSensitiveLog: (
  obj: ThesaurusSummary
) => any;
export declare const ListThesauriResponseFilterSensitiveLog: (
  obj: ListThesauriResponse
) => any;
export declare const MemberGroupFilterSensitiveLog: (obj: MemberGroup) => any;
export declare const MemberUserFilterSensitiveLog: (obj: MemberUser) => any;
export declare const GroupMembersFilterSensitiveLog: (obj: GroupMembers) => any;
export declare const PutPrincipalMappingRequestFilterSensitiveLog: (
  obj: PutPrincipalMappingRequest
) => any;
export declare const DocumentRelevanceConfigurationFilterSensitiveLog: (
  obj: DocumentRelevanceConfiguration
) => any;
export declare const SortingConfigurationFilterSensitiveLog: (
  obj: SortingConfiguration
) => any;
export declare const SpellCorrectionConfigurationFilterSensitiveLog: (
  obj: SpellCorrectionConfiguration
) => any;
export declare const DataSourceGroupFilterSensitiveLog: (
  obj: DataSourceGroup
) => any;
export declare const UserContextFilterSensitiveLog: (obj: UserContext) => any;
export declare const ScoreAttributesFilterSensitiveLog: (
  obj: ScoreAttributes
) => any;
export declare const TableCellFilterSensitiveLog: (obj: TableCell) => any;
export declare const TableRowFilterSensitiveLog: (obj: TableRow) => any;
export declare const TableExcerptFilterSensitiveLog: (obj: TableExcerpt) => any;
export declare const QueryResultItemFilterSensitiveLog: (
  obj: QueryResultItem
) => any;
export declare const CorrectionFilterSensitiveLog: (obj: Correction) => any;
export declare const SpellCorrectedQueryFilterSensitiveLog: (
  obj: SpellCorrectedQuery
) => any;
export declare const WarningFilterSensitiveLog: (obj: Warning) => any;
export declare const StartDataSourceSyncJobRequestFilterSensitiveLog: (
  obj: StartDataSourceSyncJobRequest
) => any;
export declare const StartDataSourceSyncJobResponseFilterSensitiveLog: (
  obj: StartDataSourceSyncJobResponse
) => any;
export declare const StopDataSourceSyncJobRequestFilterSensitiveLog: (
  obj: StopDataSourceSyncJobRequest
) => any;
export declare const ClickFeedbackFilterSensitiveLog: (
  obj: ClickFeedback
) => any;
export declare const RelevanceFeedbackFilterSensitiveLog: (
  obj: RelevanceFeedback
) => any;
export declare const SubmitFeedbackRequestFilterSensitiveLog: (
  obj: SubmitFeedbackRequest
) => any;
export declare const TagResourceRequestFilterSensitiveLog: (
  obj: TagResourceRequest
) => any;
export declare const TagResourceResponseFilterSensitiveLog: (
  obj: TagResourceResponse
) => any;
export declare const UntagResourceRequestFilterSensitiveLog: (
  obj: UntagResourceRequest
) => any;
export declare const UntagResourceResponseFilterSensitiveLog: (
  obj: UntagResourceResponse
) => any;
export declare const UpdateAccessControlConfigurationRequestFilterSensitiveLog: (
  obj: UpdateAccessControlConfigurationRequest
) => any;
export declare const UpdateAccessControlConfigurationResponseFilterSensitiveLog: (
  obj: UpdateAccessControlConfigurationResponse
) => any;
export declare const UpdateDataSourceRequestFilterSensitiveLog: (
  obj: UpdateDataSourceRequest
) => any;
export declare const UpdateExperienceRequestFilterSensitiveLog: (
  obj: UpdateExperienceRequest
) => any;
export declare const UpdateIndexRequestFilterSensitiveLog: (
  obj: UpdateIndexRequest
) => any;
export declare const UpdateQuerySuggestionsBlockListRequestFilterSensitiveLog: (
  obj: UpdateQuerySuggestionsBlockListRequest
) => any;
