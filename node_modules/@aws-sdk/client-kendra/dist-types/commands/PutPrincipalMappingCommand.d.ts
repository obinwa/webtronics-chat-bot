import { EndpointParameterInstructions } from "@aws-sdk/middleware-endpoint";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
import { KendraClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../KendraClient";
import { PutPrincipalMappingRequest } from "../models/models_0";
export interface PutPrincipalMappingCommandInput extends PutPrincipalMappingRequest {
}
export interface PutPrincipalMappingCommandOutput extends __MetadataBearer {
}
/**
 * <p>Maps users to their groups so that you only need to provide
 *             the user ID when you issue the query.</p>
 *          <p>You can also map sub groups to groups.
 *             For example, the group "Company Intellectual Property Teams" includes
 *             sub groups "Research" and "Engineering". These sub groups include their
 *             own list of users or people who work in these teams. Only users who work
 *             in research and engineering, and therefore belong in the intellectual
 *             property group, can see top-secret company documents in their search
 *             results.</p>
 *          <p>This is useful for user context filtering, where search results are
 *             filtered based on the user or their group access to documents. For more
 *             information, see
 *             <a href="https://docs.aws.amazon.com/kendra/latest/dg/user-context-filter.html">Filtering
 *                 on user context</a>.</p>
 *          <p>If more than five <code>PUT</code> actions for a group are currently
 *             processing, a validation exception is thrown.</p>
 *          <p>
 *             <code>PutPrincipalMapping</code> is currently not supported in the
 *             Amazon Web Services GovCloud (US-West) region.</p>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { KendraClient, PutPrincipalMappingCommand } from "@aws-sdk/client-kendra"; // ES Modules import
 * // const { KendraClient, PutPrincipalMappingCommand } = require("@aws-sdk/client-kendra"); // CommonJS import
 * const client = new KendraClient(config);
 * const command = new PutPrincipalMappingCommand(input);
 * const response = await client.send(command);
 * ```
 *
 * @see {@link PutPrincipalMappingCommandInput} for command's `input` shape.
 * @see {@link PutPrincipalMappingCommandOutput} for command's `response` shape.
 * @see {@link KendraClientResolvedConfig | config} for KendraClient's `config` shape.
 *
 */
export declare class PutPrincipalMappingCommand extends $Command<PutPrincipalMappingCommandInput, PutPrincipalMappingCommandOutput, KendraClientResolvedConfig> {
    readonly input: PutPrincipalMappingCommandInput;
    static getEndpointParameterInstructions(): EndpointParameterInstructions;
    constructor(input: PutPrincipalMappingCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: KendraClientResolvedConfig, options?: __HttpHandlerOptions): Handler<PutPrincipalMappingCommandInput, PutPrincipalMappingCommandOutput>;
    private serialize;
    private deserialize;
}
