import { EndpointParameterInstructions } from "@aws-sdk/middleware-endpoint";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
import { KendraClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../KendraClient";
import { DescribePrincipalMappingRequest, DescribePrincipalMappingResponse } from "../models/models_0";
export interface DescribePrincipalMappingCommandInput extends DescribePrincipalMappingRequest {
}
export interface DescribePrincipalMappingCommandOutput extends DescribePrincipalMappingResponse, __MetadataBearer {
}
/**
 * <p>Describes the processing of <code>PUT</code> and <code>DELETE</code> actions
 *             for mapping users to their groups. This includes information on the status of
 *             actions currently processing or yet to be processed, when actions were last updated,
 *             when actions were received by Amazon Kendra, the latest action that should process
 *             and apply after other actions, and useful error messages if an action could
 *             not be processed.</p>
 *          <p>
 *             <code>DescribePrincipalMapping</code> is currently not supported in the
 *             Amazon Web Services GovCloud (US-West) region.</p>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { KendraClient, DescribePrincipalMappingCommand } from "@aws-sdk/client-kendra"; // ES Modules import
 * // const { KendraClient, DescribePrincipalMappingCommand } = require("@aws-sdk/client-kendra"); // CommonJS import
 * const client = new KendraClient(config);
 * const command = new DescribePrincipalMappingCommand(input);
 * const response = await client.send(command);
 * ```
 *
 * @see {@link DescribePrincipalMappingCommandInput} for command's `input` shape.
 * @see {@link DescribePrincipalMappingCommandOutput} for command's `response` shape.
 * @see {@link KendraClientResolvedConfig | config} for KendraClient's `config` shape.
 *
 */
export declare class DescribePrincipalMappingCommand extends $Command<DescribePrincipalMappingCommandInput, DescribePrincipalMappingCommandOutput, KendraClientResolvedConfig> {
    readonly input: DescribePrincipalMappingCommandInput;
    static getEndpointParameterInstructions(): EndpointParameterInstructions;
    constructor(input: DescribePrincipalMappingCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: KendraClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribePrincipalMappingCommandInput, DescribePrincipalMappingCommandOutput>;
    private serialize;
    private deserialize;
}
